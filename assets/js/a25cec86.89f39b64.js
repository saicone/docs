"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6544],{2636:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"rtag/feature/custom-objects","title":"Custom Objects","description":"How to save and get custom objects in Rtag","source":"@site/docs/rtag/feature/custom-objects.md","sourceDirName":"rtag/feature","slug":"/rtag/feature/custom-objects","permalink":"/rtag/feature/custom-objects","draft":false,"unlisted":false,"editUrl":"https://github.com/saicone/rtag/blob/main/docs/default/feature/custom-objects.md","tags":[],"version":"current","lastUpdatedBy":"github-actions[bot]","lastUpdatedAt":1755643093000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Custom Objects","description":"How to save and get custom objects in Rtag"},"sidebar":"rtag","previous":{"title":"Optional Types","permalink":"/rtag/feature/types"},"next":{"title":"Functional Paths","permalink":"/rtag/feature/functions"}}');var s=n(4848),o=n(8453);const i={sidebar_position:2,title:"Custom Objects",description:"How to save and get custom objects in Rtag"},r=void 0,l={},c=[{value:"Gson serializer",id:"gson-serializer",level:2},{value:"Rtag registry",id:"rtag-registry",level:2},{value:"Example",id:"example",level:3}];function u(e){const t={admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"With Rtag you can set custom objects into NBT tags and get has the required type, depends on your needs there are different options to (de)serialize objects."}),"\n",(0,s.jsx)(t.h2,{id:"gson-serializer",children:"Gson serializer"}),"\n",(0,s.jsx)(t.p,{children:"By using the Gson library inside Bukkit code, it's possible to convert objets following the next process:"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Serializer (set)"}),": Custom Object -> Json String -> Map -> NBTTagCompound"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Deserializer (get)"}),": NBTTagCompound -> Map -> Json String -> Custom Object"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'// Create your custom object\nMyObject myObj = ...;\n\n// --- Using Rtag instance\nRtag rtag = ...;\nObject compount = ...;\n// Set to "my -> object -> path"\nrtag.set(compound, myObj, "my", "object", "path");\n// Get from "my <- object <- path"\nMyObject sameObj = rtag.getOptional(compount, "my", "object", "path").as(MyObject.class);\n\n\n// --- Using RtagEditor instance\nRtagEditor tag = ...;\n// Set to "my -> object -> path"\ntag.set(myObj, "my", "object", "path");\n// Get from "my <- object <- path"\nMyObject sameObj = tag.getOptional("my", "object", "path").as(MyObject.class);\n'})}),"\n",(0,s.jsx)(t.h2,{id:"rtag-registry",children:"Rtag registry"}),"\n",(0,s.jsx)(t.p,{children:"Rtag by default only has support for normal Java objects (String, Integer, List... etc), if you want to set and get custom objects you can register a (de)serializer into Rtag instance."}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"RtagSerializer"}),": Instance to convert a custom object into Map."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"RtagDeserializer"}),": Instance to convert a Map into a custom object."]}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsx)(t.p,{children:"This conversion put an additional key into your saved tag to detect it using the provided ID."})}),"\n",(0,s.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,s.jsxs)(t.p,{children:["Suppose you have a custom object named ",(0,s.jsx)(t.code,{children:"CustomData"})," to save additional data in your items:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:"package my.plugin;\n\npublic class CustomData {\n\n    private final String type;\n    private int level;\n    private boolean broken;\n\n    public CustomData(String type, int level, boolean broken) {\n        this.type = type;\n        this.level = level;\n        this.broken = broken;\n    }\n\n    public String getType() {\n        return type;\n    }\n\n    public int getLevel() {\n    \treturn level;\n    }\n\n    public boolean isBroken() {\n    \treturn broken;\n    }\n\n    public void setLevel(int level) {\n    \tthis.level = level;\n    }\n\n    public void setBroken(boolean broken) {\n    \tthis.broken = broken;\n    }\n\n    public boolean equals(Object object) {\n    \tif (object instanceof CustomData) {\n    \t\tCustomData data = (CustomData) object;\n    \t\treturn data.getType().equals(type) && data.getLevel == level && data.isBroken == broken;\n    \t}\n    \treturn false;\n    }\n}\n"})}),"\n",(0,s.jsx)(t.p,{children:"So you need to create a (de)serializer for it:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'package my.plugin;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class CustomDataConversion implements RtagSerializer<CustomData>, RtagDeserializer<CustomData> {\n    \n    // ID used when the object will be converted into Map.\n    // CustomData -> Map\n    @Override\n    public String getInID() {\n        return "myplugin:CustomData";\n    }\n    \n    // ID used when an Map will be converted into the object.\n    // Map -> CustomData\n    @Override\n    public String getOutID() {\n        return "myplugin:CustomData";\n    }\n\n    // Convert the CustomData into Map\n    @Override\n    public Map<String, Object> serialize(CustomData data) {\n        Map<String, Object> map = new HashMap();\n        map.put("type", data.getType());\n        map.put("level", data.getLevel());\n        // Boolean value must be saved as byte\n        map.put("broken", data.isBroken() ? (byte) 1 : (byte) 0);\n        return map;\n    }\n    \n    // Convert the Map into CustomData\n    @Override\n    public CustomData deserialize(Map<String, Object> map) {\n        String type = (String) map.get("type");\n        Integer level = (Integer) map.get("level");\n        Byte broken = (Byte) map.get("broken");\n\n        if (type == null || level == null || broken == null) {\n        \treturn null;\n        } else {\n        \treturn new CustomData(type, level, broken == (byte) 1);\n        }\n    }\n}\n'})}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsxs)(t.p,{children:["It's suggested to use an ID with the format ",(0,s.jsx)(t.code,{children:"<plugin>:<object>"})," to avoid incompatibility issues with other plugins"]})}),"\n",(0,s.jsx)(t.p,{children:"Then you need to register the (de)serializer into used Rtag instance:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:"Rtag rtag = ...;\nCustomDataConversion serializer = new CustomDataConversion();\n\nrtag.putSerializer(CustomData.class, serializer);\nrtag.putDeserializer(serializer);\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Now when you use the Rtag instance with registered ",(0,s.jsx)(t.code,{children:"CustomDataConversion"}),", you can set and get the CustomData with simple methods."]}),"\n",(0,s.jsxs)(t.p,{children:["In this example will be used an RtagItem with Rtag that have the ",(0,s.jsx)(t.code,{children:"CustomDataConversion"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'private final Rtag rtag = initRtag();\n\nprivate Rtag initRtag() {\n    Rtag rtag = new Rtag();\n    CustomDataConversion serializer = new CustomDataConversion();\n    rtag.putSerializer(CustomData.class, serializer);\n    rtag.putDeserializer(serializer);\n    return rtag;\n}\n\npublic void example(ItemStack item) {\n    RtagItem tag = new RtagItem(rtag, item);\n    \n    // -- Save custom data into ItemStack\n    \n    // Data for the item\n    CustomData data = new CustomData("EPIC", 30, false);\n    // Save at path "custom -> data"\n    tag.set(data, "custom", "data");\n    \n    // The changes will be loaded into original item\n    tag.load();\n    \n    \n    // -- Get custom data from ItemStack\n    \n    // Get data from "custom" -> "data" without explicit conversion\n    CustomData itemData = tag.get("custom", "data");\n    // Check if it equals\n    System.out.println(data.equals(itemData));\n}\n'})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>r});var a=n(6540);const s={},o=a.createContext(s);function i(e){const t=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);