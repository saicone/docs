"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6546],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>k});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var m=n.createContext({}),p=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(m.Provider,{value:t},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,l=e.originalType,m=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=p(a),c=i,k=d["".concat(m,".").concat(c)]||d[c]||s[c]||l;return a?n.createElement(k,r(r({ref:t},u),{},{components:a})):n.createElement(k,r({ref:t},u))}));function k(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=a.length,r=new Array(l);r[0]=c;var o={};for(var m in t)hasOwnProperty.call(t,m)&&(o[m]=t[m]);o.originalType=e,o[d]="string"==typeof e?e:i,r[1]=o;for(var p=2;p<l;p++)r[p]=a[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},1876:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>r,default:()=>s,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(7462),i=(a(7294),a(3905));const l={sidebar_position:5,title:"Item Configuration",description:"Information about PixelBuy item configuration format."},r=void 0,o={unversionedId:"pixelbuy/usage/item-config",id:"pixelbuy/usage/item-config",title:"Item Configuration",description:"Information about PixelBuy item configuration format.",source:"@site/docs/pixelbuy/usage/item-config.md",sourceDirName:"pixelbuy/usage",slug:"/pixelbuy/usage/item-config",permalink:"/pixelbuy/usage/item-config",draft:!1,editUrl:"https://github.com/saicone/pixelbuy/blob/main/docs/default/usage/item-config.md",tags:[],version:"current",lastUpdatedBy:"github-actions[bot]",lastUpdatedAt:1739466050,formattedLastUpdatedAt:"Feb 13, 2025",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Item Configuration",description:"Information about PixelBuy item configuration format."},sidebar:"pixelbuy",previous:{title:"Colored text",permalink:"/pixelbuy/usage/colored-text"},next:{title:"Compatible plugins",permalink:"/pixelbuy/compatibility"}},m={},p=[{value:"Usage",id:"usage",level:2},{value:"Format",id:"format",level:2},{value:"Item",id:"item",level:3},{value:"Display",id:"display",level:3},{value:"Attributes",id:"attributes",level:3},{value:"Enchantments",id:"enchantments",level:3},{value:"Textured head",id:"textured-head",level:3},{value:"Special items",id:"special-items",level:3},{value:"Providers",id:"providers",level:2},{value:"Oraxen",id:"oraxen",level:3},{value:"MMOItems",id:"mmoitems",level:3},{value:"ItemsAdder",id:"itemsadder",level:3},{value:"Append",id:"append",level:2},{value:"Name",id:"name",level:3},{value:"Lore",id:"lore",level:3},{value:"NBT",id:"nbt",level:2}],u={toc:p},d="wrapper";function s(e){let{components:t,...a}=e;return(0,i.kt)(d,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Any item configured on PixelBuy uses the same format which is quite simple."),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("p",null,"Using common tags you can make for example a diamond with custom name:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"material: DIAMOND\namount: 3\nname: '&eCustom name'\n")),(0,i.kt)("h2",{id:"format"},"Format"),(0,i.kt)("p",null,"PixelBuy uses XSeries library to serialize items with XItemStack format."),(0,i.kt)("h3",{id:"item"},"Item"),(0,i.kt)("p",null,"The basic item tags to build it properly, only ",(0,i.kt)("inlineCode",{parentName:"p"},"material")," is required."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"material: DIAMOND\namount: 1\ndamage: 1\nunbreakable: false\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"material")," - The item material."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"amount")," - The item amount."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"damage")," - The damage value data."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"unbreakable")," (Only MC +1.11) - Set true to make the item unbreakable.")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"unbreakable")," tag was introduced on Minecraft 1.7, but Bukkit API only allows editing it since MC 1.11, you can still set an unbreakable state using item NBT configuration below this page.")),(0,i.kt)("h3",{id:"display"},"Display"),(0,i.kt)("p",null,"Any display related configuration."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"name: '&eCustom name'\nlore:\n  - '&7Some custom'\n  - '&alore lines'\nflags:\n  - HIDE_ATTRIBUTES\nglow: false\ncustom-model-data: 40\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"name")," - The item display name."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"lore")," - The item display lore."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"flags")," - The display item flags, use ",(0,i.kt)("inlineCode",{parentName:"li"},"ALL")," to set all item flags."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"glow")," - Set true to make item glow (It also adds a ",(0,i.kt)("inlineCode",{parentName:"li"},"Durability I")," to the item with ",(0,i.kt)("inlineCode",{parentName:"li"},"HIDE_ENCHANTS")," flag)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"custom-model-data")," (Only MC +1.14) - The custom model data from texture pack used for this item.")),(0,i.kt)("h3",{id:"attributes"},"Attributes"),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"This feature is only for MC 1.13 or higher.")),(0,i.kt)("p",null,"The attribute modifiers used on item, a list of available attributes can be found on ",(0,i.kt)("a",{parentName:"p",href:"https://hub.spigotmc.org/javadocs/spigot/org/bukkit/attribute/Attribute.html"},"Spigot Javadocs"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"attributes:\n  GENERIC_ATTACK_DAMAGE:\n    id: '7ca003dc-175f-4f1f-b490-5651045311ad'\n    name: generic.attack_damage\n    amount: 8.0\n    operation: ADD_NUMBER\n    slot: HAND\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"id")," - Is the unique id for the attribute modifier (is not required)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"name")," - Is the name of the attribute."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"amount")," - Is the base amount used on the operation."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"operation")," - The operation used in the attribute, a list of available operation can be found on ",(0,i.kt)("a",{parentName:"li",href:"https://hub.spigotmc.org/javadocs/spigot/org/bukkit/attribute/AttributeModifier.Operation.html"},"Spigot Javadocs"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"slot")," - Is the equipment slot where attribute modifier takes effect, can be ",(0,i.kt)("inlineCode",{parentName:"li"},"CHEST"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"FEET"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"HAND"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"HEAD"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"LEGS")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"OFF_HAND"),".")),(0,i.kt)("h3",{id:"enchantments"},"Enchantments"),(0,i.kt)("p",null,"The current enchantments on item."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"enchants:\n  DURABILITY: 3\nstored-enchants:\n  LURE: 2\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"enchants")," - The enchantments to apply on item."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"stored-enchants")," - Same as above, but only applies for enchanted books.")),(0,i.kt)("h3",{id:"textured-head"},"Textured head"),(0,i.kt)("p",null,"Adds a texture to current item if it's a ",(0,i.kt)("inlineCode",{parentName:"p"},"PLAYER_HEAD")," material."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"skull: Rubenicos\n")),(0,i.kt)("p",null,"The texture can be ",(0,i.kt)("inlineCode",{parentName:"p"},"player unique id"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"player name"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"base64 texture"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"mojang url")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"texture hash"),"."),(0,i.kt)("h3",{id:"special-items"},"Special items"),(0,i.kt)("p",null,"There is a bunch of special items that can be configured using XItemStack format, but for now it's not covered by this wiki, take a look into ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/CryptoMorin/XSeries/blob/master/src/main/java/com/cryptomorin/xseries/XItemStack.java"},"XItemStack source code")," for more information."),(0,i.kt)("h2",{id:"providers"},"Providers"),(0,i.kt)("p",null,"You can make an advanced material configuration to get an item from other plugins."),(0,i.kt)("h3",{id:"oraxen"},"Oraxen"),(0,i.kt)("p",null,"Get item from Oraxen plugin."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# Simple configuration\nmaterial: 'oraxen:storm_sword'\n\n# Advanced configuration\nmaterial:\n  provider: oraxen\n  id: storm_sword\n")),(0,i.kt)("h3",{id:"mmoitems"},"MMOItems"),(0,i.kt)("p",null,"Get item from MMOItems plugin."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# Simple configuration\nmaterial: 'mmoitems:SWORD:lava_sword'\n\n# Advanced configuration\nmaterial:\n  provider: mmoitems\n  type: SWORD\n  id: lava_sword\n")),(0,i.kt)("h3",{id:"itemsadder"},"ItemsAdder"),(0,i.kt)("p",null,"Get item from ItemsAdder plugin."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# Simple configuration\nmaterial: 'itemsadder:custom_item'\n\n# Advanced configuration\nmaterial:\n  provider: itemsadder\n  id: custom_item\n")),(0,i.kt)("h2",{id:"append"},"Append"),(0,i.kt)("p",null,"Append some display information to item after building it, this is useful if you want an item from another plugin and also add some lines to item lore."),(0,i.kt)("h3",{id:"name"},"Name"),(0,i.kt)("p",null,"Append to item display name."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# Simple configuration\nappend:\n  name.before: '&eText before'\n  name.after: '&bText after'\n\n# Advanced configuration\nappend:\n  name:\n    before: '&eText before'\n    after: '&bText after'\n")),(0,i.kt)("h3",{id:"lore"},"Lore"),(0,i.kt)("p",null,"Append to item display lore."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# Simple configuration\nappend:\n  lore.before:\n    - '&eLine before'\n  lore.after:\n    - '&bLine after'\n\n# Advanced configuration\nappend:\n  lore:\n    before:\n      - '&eLine before'\n    after:\n      - '&bLine after'\n")),(0,i.kt)("h2",{id:"nbt"},"NBT"),(0,i.kt)("p",null,"It's the most advanced feature to edit item tags directly from internal data."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"nbt:\n  # Make item unbreakable on versions older than 1.11\n  Unbreakable: true\n  # Set item repair cost on anvils\n  RepairCost: 10\n  # And also add anything here\n  some:\n    custom:\n      tag: 'path'\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Data types:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"byte")," - Write as ",(0,i.kt)("inlineCode",{parentName:"li"},"<number>b"),", for example ",(0,i.kt)("inlineCode",{parentName:"li"},"tag: 30b")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"short")," - Write as ",(0,i.kt)("inlineCode",{parentName:"li"},"<number>s"),", for example ",(0,i.kt)("inlineCode",{parentName:"li"},"tag: 30s")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"int")," - Write as ",(0,i.kt)("inlineCode",{parentName:"li"},"<number>"),", for example ",(0,i.kt)("inlineCode",{parentName:"li"},"tag: 30")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"long")," - Write as ",(0,i.kt)("inlineCode",{parentName:"li"},"<number>L"),", for example ",(0,i.kt)("inlineCode",{parentName:"li"},"tag: 30L")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"float")," - Write as ",(0,i.kt)("inlineCode",{parentName:"li"},"<number>f"),", for example ",(0,i.kt)("inlineCode",{parentName:"li"},"tag: 30.0f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"double")," - Write as ",(0,i.kt)("inlineCode",{parentName:"li"},"<number>d"),", for example ",(0,i.kt)("inlineCode",{parentName:"li"},"tag: 30.0d")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"byte[]")," - Write as ",(0,i.kt)("inlineCode",{parentName:"li"},"[B; <bytes...>B]"),", for example ",(0,i.kt)("inlineCode",{parentName:"li"},"tag: [B; 30B, 40B, 50B]")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"int[]")," - Write as ",(0,i.kt)("inlineCode",{parentName:"li"},"[I; <integers...>]"),", for example ",(0,i.kt)("inlineCode",{parentName:"li"},"tag: [I; 30, 40, 50]")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"long[]")," - Write as ",(0,i.kt)("inlineCode",{parentName:"li"},"[L; <longs...>l]"),", for example ",(0,i.kt)("inlineCode",{parentName:"li"},"tag: [L; 30L, 40L, 50L]")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"String")," - Write as ",(0,i.kt)("inlineCode",{parentName:"li"},"<text>"),", for example ",(0,i.kt)("inlineCode",{parentName:"li"},"tag: 'Hello'"))))}s.isMDXComponent=!0}}]);