"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6126],{833:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"rtag/intro","title":"Introduction","description":"Basic information about NBT tags","source":"@site/docs/rtag/intro.md","sourceDirName":"rtag","slug":"/rtag/intro","permalink":"/rtag/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/saicone/rtag/blob/main/docs/default/intro.md","tags":[],"version":"current","lastUpdatedBy":"github-actions[bot]","lastUpdatedAt":1750379083000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Introduction","description":"Basic information about NBT tags"},"sidebar":"rtag","previous":{"title":"Rtag","permalink":"/rtag/"},"next":{"title":"Usage","permalink":"/rtag/usage/"}}');var s=t(4848),i=t(8453);const o={sidebar_position:2,title:"Introduction",description:"Basic information about NBT tags"},r=void 0,c={},l=[{value:"What is NBT",id:"what-is-nbt",level:2},{value:"Compatible objects",id:"compatible-objects",level:2},{value:"About Bukkit",id:"about-bukkit",level:2},{value:"Rtag Magic",id:"rtag-magic",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"what-is-nbt",children:"What is NBT"}),"\n",(0,s.jsx)(n.p,{children:"The Named Binary Tag (NBT) format is a tree data structure used by Minecraft to save data in different formats starting with bytes, an NBT is just a simple Java object (String, Integer, List.. etc) defined with a key."}),"\n",(0,s.jsx)(n.p,{children:"The NBT format is commonly used to save Minecraft objects like Worlds, Items, Entities... etc."}),"\n",(0,s.jsxs)(n.p,{children:["The NBT classes inside Minecraft code extends ",(0,s.jsx)(n.code,{children:"NBTBase"})," and reference the common Java objects: ",(0,s.jsx)(n.code,{children:"NBTTagString"}),", ",(0,s.jsx)(n.code,{children:"NBTTagInt"}),", ",(0,s.jsx)(n.code,{children:"NBTTagLong"}),", ",(0,s.jsx)(n.code,{children:"NBTTagList"}),"... etc. The main NBT class would be ",(0,s.jsx)(n.code,{children:"NBTTagCompound"})," which refers to a Java Map and is the basic object to store NBT objects with their respective key (",(0,s.jsx)(n.code,{children:"Map<String, NBTBase>"}),")."]}),"\n",(0,s.jsx)(n.h2,{id:"compatible-objects",children:"Compatible objects"}),"\n",(0,s.jsx)(n.p,{children:"The NBT objects defined by their type IDs are:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"NBTTagByte"}),": Same has ",(0,s.jsx)(n.code,{children:"byte"})," in Java."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"NBTTagShort"}),": Same has ",(0,s.jsx)(n.code,{children:"short"})," in Java."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"NBTTagInt"}),": Same has ",(0,s.jsx)(n.code,{children:"int"})," in Java."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"NBTTagLong"}),": Same has ",(0,s.jsx)(n.code,{children:"long"})," in Java."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"NBTTagFloat"}),": Same has ",(0,s.jsx)(n.code,{children:"float"})," in Java."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"NBTTagDouble"}),": Same has ",(0,s.jsx)(n.code,{children:"double"})," in Java."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"NBTTagByteArray"}),": Same has ",(0,s.jsx)(n.code,{children:"byte[]"})," in Java."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"NBTTagString"}),": Same has ",(0,s.jsx)(n.code,{children:"String"})," in Java."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"NBTTagList"}),": Same has ",(0,s.jsx)(n.code,{children:"List<NBTBase>"})," in Java."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"NBTTagCompound"}),": Same has ",(0,s.jsx)(n.code,{children:"Map<String, NBTBase>"})," in Java."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"NBTTagIntArray"}),": Same has ",(0,s.jsx)(n.code,{children:"int[]"})," in Java."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"NBTTagLongArray"}),": Same has ",(0,s.jsx)(n.code,{children:"long[]"})," in Java (Added on MC 1.12)."]}),"\n"]}),"\n",(0,s.jsxs)(n.admonition,{title:"Boolean object",type:"info",children:[(0,s.jsxs)(n.p,{children:["As you can see the booleans are not compatible, because are saved as ",(0,s.jsx)(n.code,{children:"byte"})," (",(0,s.jsx)(n.code,{children:"NBTTagByte"}),")."]}),(0,s.jsxs)(n.p,{children:["So take in count that Java by default cannot convert ",(0,s.jsx)(n.code,{children:"byte"})," as ",(0,s.jsx)(n.code,{children:"boolean"})," (You will see a better explanation next)."]})]}),"\n",(0,s.jsx)(n.h2,{id:"about-bukkit",children:"About Bukkit"}),"\n",(0,s.jsxs)(n.p,{children:['First of all, "NMS" means ',(0,s.jsx)(n.code,{children:"net.minecraft.server"}),', it\'s a package on old Bukkit versions before "universalization" (Bukkit 1.17 mappings) which contains all classes from the original Minecraft server distributed by Mojang, Bukkit uses it to work as server.']}),"\n",(0,s.jsxs)(n.p,{children:["Most recent versions of Bukkit (from Bukkit 1.17) have different paths for Minecraft server classes, for example ",(0,s.jsx)(n.code,{children:"net.minecraft.world.level.World"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["The NMS is usually known by using it with ",(0,s.jsx)(n.a,{href:"https://www.oracle.com/technical-resources/articles/java/javareflection.html",children:"reflection"})," because Mojang constantly changes the methods names and uses ",(0,s.jsx)(n.a,{href:"https://www.javatpoint.com/java-obfuscator",children:"obfuscators"})," in his code."]}),"\n",(0,s.jsx)(n.p,{children:"So it has been a frequent problem for developers that use NBT directly instead of methods provided by Bukkit, like PersistentDataContainer introduced on Bukkit 1.14."}),"\n",(0,s.jsx)(n.h2,{id:"rtag-magic",children:"Rtag Magic"}),"\n",(0,s.jsx)(n.p,{children:"To simplify NBT usage, the Rtag (readable tag) library provide an easy way to handle NBTTagCompounds and the other compatible objects."}),"\n",(0,s.jsxs)(n.p,{children:["Rtag (try to) convert any Java object into ",(0,s.jsx)(n.code,{children:"NBTBase"})," and viceversa, in order to handle NBT as normal objects in a easy way."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// GET - You will see as normal object\nNBTBase -> Object\n// SET - The server will save as NBTBase object\nObject -> NBTBase\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Currently limited by ",(0,s.jsx)(n.code,{children:"boolean"})," conversion, so it's suggested to get them as ",(0,s.jsx)(n.code,{children:"byte"})," or run an ",(0,s.jsx)(n.a,{href:"/rtag/feature/types#conversion",children:"explicit conversion"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// get from path\nbyte data = rtag.get(compound, "path");\n// convert to boolean\nboolean bool = data == (byte) 1;\n\n// or get by explicit conversion\nboolean bool = rtag.getOptional(compound, "path").asBoolean(false); // false by default\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var a=t(6540);const s={},i=a.createContext(s);function o(e){const n=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);