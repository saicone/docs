"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8733],{5846:(e,n,i)=>{i.d(n,{W:()=>c});var l=i(6540),s=i(4586);const t=["zero","one","two","few","many","other"];function a(e){return t.filter(n=>e.includes(n))}const r={locale:"en",pluralForms:a(["one","other"]),select:e=>1===e?"one":"other"};function o(){const{i18n:{currentLocale:e}}=(0,s.A)();return(0,l.useMemo)(()=>{try{return function(e){const n=new Intl.PluralRules(e);return{locale:e,pluralForms:a(n.resolvedOptions().pluralCategories),select:e=>n.select(e)}}(e)}catch(n){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${n.message}\n`),r}},[e])}function c(){const e=o();return{selectMessage:(n,i)=>function(e,n,i){const l=e.split("|");if(1===l.length)return l[0];l.length>i.pluralForms.length&&console.error(`For locale=${i.locale}, a maximum of ${i.pluralForms.length} plural forms are expected (${i.pluralForms.join(",")}), but the message contains ${l.length}: ${e}`);const s=i.select(n),t=i.pluralForms.indexOf(s);return l[Math.min(t,l.length-1)]}(i,n,e)}}},5965:(e,n,i)=>{i.d(n,{A:()=>f});i(6540);var l=i(4164),s=i(8774),t=i(6972),a=i(5846),r=i(6654),o=i(1312),c=i(1107);const d={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var u=i(4848);function h({className:e,href:n,children:i}){return(0,u.jsx)(s.A,{href:n,className:(0,l.A)("card padding--lg",d.cardContainer,e),children:i})}function g({className:e,href:n,icon:i,title:s,description:t}){return(0,u.jsxs)(h,{href:n,className:e,children:[(0,u.jsxs)(c.A,{as:"h2",className:(0,l.A)("text--truncate",d.cardTitle),title:s,children:[i," ",s]}),t&&(0,u.jsx)("p",{className:(0,l.A)("text--truncate",d.cardDescription),title:t,children:t})]})}function p({item:e}){const n=(0,t.Nr)(e),i=function(){const{selectMessage:e}=(0,a.W)();return n=>e(n,(0,o.T)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:n}))}();return n?(0,u.jsx)(g,{className:e.className,href:n,icon:"\ud83d\uddc3\ufe0f",title:e.label,description:e.description??i(e.items.length)}):null}function m({item:e}){const n=(0,r.A)(e.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",i=(0,t.cC)(e.docId??void 0);return(0,u.jsx)(g,{className:e.className,href:e.href,icon:n,title:e.label,description:e.description??i?.description})}function f({item:e}){switch(e.type){case"link":return(0,u.jsx)(m,{item:e});case"category":return(0,u.jsx)(p,{item:e});default:throw new Error(`unknown item type ${JSON.stringify(e)}`)}}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>r});var l=i(6540);const s={},t=l.createContext(s);function a(e){const n=l.useContext(t);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),l.createElement(t.Provider,{value:n},e.children)}},9058:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>d});const l=JSON.parse('{"id":"pixelbuy/setup/configuration","title":"Configuration","description":"PixelBuy main configuration.","source":"@site/docs/pixelbuy/setup/configuration.md","sourceDirName":"pixelbuy/setup","slug":"/pixelbuy/setup/configuration","permalink":"/pixelbuy/setup/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/saicone/pixelbuy/blob/main/docs/default/setup/configuration.md","tags":[],"version":"current","lastUpdatedBy":"github-actions[bot]","lastUpdatedAt":1755644860000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Configuration","description":"PixelBuy main configuration."},"sidebar":"pixelbuy","previous":{"title":"Setup","permalink":"/pixelbuy/setup/"},"next":{"title":"Database","permalink":"/pixelbuy/setup/database"}}');var s=i(4848),t=i(8453),a=i(5965);const r={sidebar_position:1,title:"Configuration",description:"PixelBuy main configuration."},o=void 0,c={},d=[{value:"Plugin",id:"plugin",level:2},{value:"Logging level",id:"logging-level",level:3},{value:"Player provider",id:"player-provider",level:3},{value:"Language",id:"language",level:2},{value:"Plugin language",id:"plugin-language",level:3},{value:"Default language",id:"default-language",level:3},{value:"Aliases",id:"aliases",level:3},{value:"Database",id:"database",level:2},{value:"Messenger",id:"messenger",level:2},{value:"Placeholder",id:"placeholder",level:2},{value:"Commands",id:"commands",level:2}];function u(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"plugin",children:"Plugin"}),"\n",(0,s.jsx)(n.h3,{id:"logging-level",children:"Logging level"}),"\n",(0,s.jsxs)(n.p,{children:["By default PixelBuy uses a logging level of ",(0,s.jsx)(n.code,{children:"3"}),", can be changed to listen:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"1"})," = Errors"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"2"})," = Warnings"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"3"})," = Information"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"4"})," = Debug information"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["For example, if you set ",(0,s.jsx)(n.code,{children:"3"})," it will listen errors, warnings and information or set ",(0,s.jsx)(n.code,{children:"0"})," to disable any logging."]}),"\n",(0,s.jsx)(n.h3,{id:"player-provider",children:"Player provider"}),"\n",(0,s.jsxs)(n.p,{children:["Most Bukkit servers (mainly the offline-mode ones) doesn't have a proper way to get ",(0,s.jsx)(n.code,{children:"OfflinePlayer"})," information (name and unique id), so PixelBuy offers different ways to replace that with a more robust system like:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"AUTO"})," = Choose automatically the best available option."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"PIXELBUY"})," = Use PixelBuy loaded data."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"LUCKPERMS"})," = Use LuckPerms plugin."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"BUKKIT"})," = Use the default Bukkit offline player methods."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Every player provider system fallback into ",(0,s.jsx)(n.code,{children:"BUKKIT"})," if it doesn't find any information for ",(0,s.jsx)(n.code,{children:"OfflinePlayer"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"language",children:"Language"}),"\n",(0,s.jsx)(n.p,{children:"PixelBuy handles language types automatically, choosing the nearest available language to players with some default values."}),"\n",(0,s.jsxs)(n.p,{children:["You can add your own language by creating a ",(0,s.jsx)(n.code,{children:".yml"})," file into ",(0,s.jsx)(n.code,{children:"plugins/PixelBuy/lang"})," folder."]}),"\n",(0,s.jsx)(n.h3,{id:"plugin-language",children:"Plugin language"}),"\n",(0,s.jsx)(n.p,{children:"Is the language how you see PixelBuy in console, can be changed on plugin configuration."}),"\n",(0,s.jsx)(n.h3,{id:"default-language",children:"Default language"}),"\n",(0,s.jsx)(n.p,{children:"Is the language to set for players that have a language not supported by the plugin."}),"\n",(0,s.jsx)(n.h3,{id:"aliases",children:"Aliases"}),"\n",(0,s.jsx)(n.p,{children:"Is a list of any language alias for a mainly configured one."}),"\n",(0,s.jsx)(n.h2,{id:"database",children:"Database"}),"\n",(0,s.jsx)(a.A,{item:{type:"link",href:"/pixelbuy/setup/database/",label:"Database configuration",description:"How to setup PixelBuy database connection"}}),"\n",(0,s.jsx)(n.h2,{id:"messenger",children:"Messenger"}),"\n",(0,s.jsx)(a.A,{item:{type:"link",href:"/pixelbuy/setup/messenger/",label:"Messenger configuration",description:"How to setup PixelBuy messenger connection"}}),"\n",(0,s.jsx)(n.h2,{id:"placeholder",children:"Placeholder"}),"\n",(0,s.jsx)(n.p,{children:"The PlaceholderAPI compatibility can be registered with different names to be used on any placeholder compatible system."}),"\n",(0,s.jsx)(n.h2,{id:"commands",children:"Commands"}),"\n",(0,s.jsx)(n.p,{children:"Is the plugin command configuration, you can edit those commands as you want following the current format:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"register"})," - Register or not the command to be used as the main command like ",(0,s.jsx)(n.code,{children:"/command"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"})," - The main command name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"aliases"})," - The list of aliases to be registered along the command."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"permission"})," - The permission to use the command."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"delay"})," - Delay in seconds between execution, this only takes effect if the command is registered as the main command."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}}}]);