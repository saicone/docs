"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7330],{2125:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>r,contentTitle:()=>c,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"rtag/feature/functions","title":"Functional Paths","description":"How to handle paths with functions","source":"@site/docs/rtag/feature/functions.md","sourceDirName":"rtag/feature","slug":"/rtag/feature/functions","permalink":"/rtag/feature/functions","draft":false,"unlisted":false,"editUrl":"https://github.com/saicone/rtag/blob/main/docs/default/feature/functions.md","tags":[],"version":"current","lastUpdatedBy":"github-actions[bot]","lastUpdatedAt":1755644860000,"sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Functional Paths","description":"How to handle paths with functions"},"sidebar":"rtag","previous":{"title":"Custom Objects","permalink":"/rtag/feature/custom-objects"},"next":{"title":"Tag Stream","permalink":"/rtag/feature/stream"}}');var i=n(4848),o=n(8453);const s={sidebar_position:3,title:"Functional Paths",description:"How to handle paths with functions"},c=void 0,r={},l=[{value:"Usage",id:"usage",level:2}];function u(t){const e={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.admonition,{title:"Before continue",type:"info",children:[(0,i.jsx)(e.p,{children:"This is an advanced feature, you can ignore this because is rarely used."}),(0,i.jsxs)(e.p,{children:["To understand this page you should see ",(0,i.jsx)(e.a,{href:"/rtag/advanced/tags",children:"Tag Objects guide"}),"."]})]}),"\n",(0,i.jsxs)(e.p,{children:["The tree-like paths used by Rtag is quite simple, so there is a more complex way to handle edits with functions that accept ",(0,i.jsx)(e.code,{children:"NBTTagCompound"})," and ",(0,i.jsx)(e.code,{children:"NBTTagList"})," objects while the path is resolved."]}),"\n",(0,i.jsx)(e.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(e.p,{children:"For example, suppose we have the following data in a NBT:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-yaml",children:'main:\n  list:\n  \t- id: EPIC\n  \t  value: 40\n  \t- id: RARE\n  \t  value: 30\n  \t- id: LEGENDARY\n  \t  value: 50\nmy:\n  custom:\n  \tlist:\n  \t  - 15\n  \t  - 40\n  \t  - 39\n  path: "Hello"\n'})}),"\n",(0,i.jsxs)(e.p,{children:["It's impossible for a tree-like path to get the ",(0,i.jsx)(e.code,{children:"value"})," of id ",(0,i.jsx)(e.code,{children:"EPIC"}),", because it's on a list."]}),"\n",(0,i.jsxs)(e.p,{children:["In a normal case you should get the entire list and iterate hover to check what value has ",(0,i.jsx)(e.code,{children:"EPIC"})," in ",(0,i.jsx)(e.code,{children:"id"}),", which is quite expensive because Rtag will convert the entire list into normal objects including unused values in the operation."]}),"\n",(0,i.jsxs)(e.p,{children:["To solve that you can use functional paths by using a function that iterate hover ",(0,i.jsx)(e.code,{children:"NBTTagList"})," directly."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// Prepare the function\nThrowableFunction<Object, Object> function = nbtList -> {\n\tfor (Object nbtCompound : TagList.getValue(nbtList)) {\n\t\tObject id = TagCompound.get(nbtCompound, "id");\n\t\tif ("EPIC".equals(TagBase.getValue(id))) {\n\t\t\treturn nbtCompound;\n\t\t}\n\t}\n\treturn null;\n};\n\n\n// --- Using Rtag instance\nRtag rtag = ...;\nObject compound = ...;\n// Get the value path from object with EPIC id\nint value = rtag.get(compound, "main", "list", function, "value");\n// Or replace the value\nrtag.set(compound, 45, "main", "list", function, "value");\n\n\n// --- Using RtagEditor instance\nRtagEditor tag = ...;\n// Get the value path from object with EPIC id\nint value = tag.get("main", "list", function, "value");\n// Or replace the value\ntag.set(45, "main", "list", function, "value");\n'})}),"\n",(0,i.jsxs)(e.p,{children:["If you want to get ",(0,i.jsx)(e.code,{children:"value"})," from objects id ",(0,i.jsx)(e.code,{children:"RARE"})," or ",(0,i.jsx)(e.code,{children:"LEGENDARY"})," you can register a function provided by method."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'private ThrowableFunction<Object, Object> getFunction(String type) {\n\treturn nbtList -> {\n\t\tfor (Object nbtCompound : TagList.getValue(nbtList)) {\n\t\t\tObject id = TagCompound.get(nbtCompound, "id");\n\t\t\tif (type.equals(TagBase.getValue(id))) {\n\t\t\t\treturn nbtCompound;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:"And use like this:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// --- Using Rtag instance\nRtag rtag = ...;\nObject compound = ...;\n// Get the value path from object with RARE id\nint value = rtag.get(compound, "main", "list", getFunction("RARE"), "value");\n// Or replace the value\nrtag.set(compound, 35, "main", "list", getFunction("RARE"), "value");\n\n\n// --- Using RtagEditor instance\nRtagEditor tag = ...;\n// Get the value path from object with LEGENDARY id\nint value = tag.get("main", "list", getFunction("LEGENDARY"), "value");\n// Or replace the value\ntag.set(55, "main", "list", getFunction("LEGENDARY"), "value");\n'})})]})}function d(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(u,{...t})}):u(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>s,x:()=>c});var a=n(6540);const i={},o=a.createContext(i);function s(t){const e=a.useContext(o);return a.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:s(t.components),a.createElement(o.Provider,{value:e},t.children)}}}]);