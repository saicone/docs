"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4902],{3457:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"pixelbuy/usage/item-config","title":"Item Configuration","description":"Information about PixelBuy item configuration format.","source":"@site/docs/pixelbuy/usage/item-config.md","sourceDirName":"pixelbuy/usage","slug":"/pixelbuy/usage/item-config","permalink":"/pixelbuy/usage/item-config","draft":false,"unlisted":false,"editUrl":"https://github.com/saicone/pixelbuy/blob/main/docs/default/usage/item-config.md","tags":[],"version":"current","lastUpdatedBy":"Rub\xe9n","lastUpdatedAt":1751601617000,"sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"Item Configuration","description":"Information about PixelBuy item configuration format."},"sidebar":"pixelbuy","previous":{"title":"Colored text","permalink":"/pixelbuy/usage/colored-text"},"next":{"title":"Compatible plugins","permalink":"/pixelbuy/compatibility"}}');var a=i(4848),r=i(8453);const s={sidebar_position:5,title:"Item Configuration",description:"Information about PixelBuy item configuration format."},l=void 0,d={},o=[{value:"Usage",id:"usage",level:2},{value:"Format",id:"format",level:2},{value:"Item",id:"item",level:3},{value:"Display",id:"display",level:3},{value:"Attributes",id:"attributes",level:3},{value:"Enchantments",id:"enchantments",level:3},{value:"Textured head",id:"textured-head",level:3},{value:"Special items",id:"special-items",level:3},{value:"Providers",id:"providers",level:2},{value:"Oraxen",id:"oraxen",level:3},{value:"MMOItems",id:"mmoitems",level:3},{value:"ItemsAdder",id:"itemsadder",level:3},{value:"Append",id:"append",level:2},{value:"Name",id:"name",level:3},{value:"Lore",id:"lore",level:3},{value:"NBT",id:"nbt",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Any item configured on PixelBuy uses the same format which is quite simple."}),"\n",(0,a.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(n.p,{children:"Using common tags you can make for example a diamond with custom name:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"material: DIAMOND\namount: 3\nname: '&eCustom name'\n"})}),"\n",(0,a.jsx)(n.h2,{id:"format",children:"Format"}),"\n",(0,a.jsx)(n.p,{children:"PixelBuy uses XSeries library to serialize items with XItemStack format."}),"\n",(0,a.jsx)(n.h3,{id:"item",children:"Item"}),"\n",(0,a.jsxs)(n.p,{children:["The basic item tags to build it properly, only ",(0,a.jsx)(n.code,{children:"material"})," is required."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"material: DIAMOND\namount: 1\ndamage: 1\nunbreakable: false\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"material"})," - The item material."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"amount"})," - The item amount."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"damage"})," - The damage value data."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"unbreakable"})," (Only MC +1.11) - Set true to make the item unbreakable."]}),"\n"]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"unbreakable"})," tag was introduced on Minecraft 1.7, but Bukkit API only allows editing it since MC 1.11, you can still set an unbreakable state using item NBT configuration below this page."]})}),"\n",(0,a.jsx)(n.h3,{id:"display",children:"Display"}),"\n",(0,a.jsx)(n.p,{children:"Any display related configuration."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"name: '&eCustom name'\nlore:\n  - '&7Some custom'\n  - '&alore lines'\nflags:\n  - HIDE_ATTRIBUTES\nglow: false\ncustom-model-data: 40\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"name"})," - The item display name."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"lore"})," - The item display lore."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"flags"})," - The display item flags, use ",(0,a.jsx)(n.code,{children:"ALL"})," to set all item flags."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"glow"})," - Set true to make item glow (It also adds a ",(0,a.jsx)(n.code,{children:"Durability I"})," to the item with ",(0,a.jsx)(n.code,{children:"HIDE_ENCHANTS"})," flag)."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"custom-model-data"})," (Only MC +1.14) - The custom model data from texture pack used for this item."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"attributes",children:"Attributes"}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsx)(n.p,{children:"This feature is only for MC 1.13 or higher."})}),"\n",(0,a.jsxs)(n.p,{children:["The attribute modifiers used on item, a list of available attributes can be found on ",(0,a.jsx)(n.a,{href:"https://hub.spigotmc.org/javadocs/spigot/org/bukkit/attribute/Attribute.html",children:"Spigot Javadocs"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"attributes:\n  GENERIC_ATTACK_DAMAGE:\n    id: '7ca003dc-175f-4f1f-b490-5651045311ad'\n    name: generic.attack_damage\n    amount: 8.0\n    operation: ADD_NUMBER\n    slot: HAND\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"id"})," - Is the unique id for the attribute modifier (is not required)."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"name"})," - Is the name of the attribute."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"amount"})," - Is the base amount used on the operation."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"operation"})," - The operation used in the attribute, a list of available operation can be found on ",(0,a.jsx)(n.a,{href:"https://hub.spigotmc.org/javadocs/spigot/org/bukkit/attribute/AttributeModifier.Operation.html",children:"Spigot Javadocs"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"slot"})," - Is the equipment slot where attribute modifier takes effect, can be ",(0,a.jsx)(n.code,{children:"CHEST"}),", ",(0,a.jsx)(n.code,{children:"FEET"}),", ",(0,a.jsx)(n.code,{children:"HAND"}),", ",(0,a.jsx)(n.code,{children:"HEAD"}),", ",(0,a.jsx)(n.code,{children:"LEGS"})," or ",(0,a.jsx)(n.code,{children:"OFF_HAND"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"enchantments",children:"Enchantments"}),"\n",(0,a.jsx)(n.p,{children:"The current enchantments on item."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"enchants:\n  DURABILITY: 3\nstored-enchants:\n  LURE: 2\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"enchants"})," - The enchantments to apply on item."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"stored-enchants"})," - Same as above, but only applies for enchanted books."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"textured-head",children:"Textured head"}),"\n",(0,a.jsxs)(n.p,{children:["Adds a texture to current item if it's a ",(0,a.jsx)(n.code,{children:"PLAYER_HEAD"})," material."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"skull: Rubenicos\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The texture can be ",(0,a.jsx)(n.code,{children:"player unique id"}),", ",(0,a.jsx)(n.code,{children:"player name"}),", ",(0,a.jsx)(n.code,{children:"base64 texture"}),", ",(0,a.jsx)(n.code,{children:"mojang url"})," or ",(0,a.jsx)(n.code,{children:"texture hash"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"special-items",children:"Special items"}),"\n",(0,a.jsxs)(n.p,{children:["There is a bunch of special items that can be configured using XItemStack format, but for now it's not covered by this wiki, take a look into ",(0,a.jsx)(n.a,{href:"https://github.com/CryptoMorin/XSeries/blob/master/src/main/java/com/cryptomorin/xseries/XItemStack.java",children:"XItemStack source code"})," for more information."]}),"\n",(0,a.jsx)(n.h2,{id:"providers",children:"Providers"}),"\n",(0,a.jsx)(n.p,{children:"You can make an advanced material configuration to get an item from other plugins."}),"\n",(0,a.jsx)(n.h3,{id:"oraxen",children:"Oraxen"}),"\n",(0,a.jsx)(n.p,{children:"Get item from Oraxen plugin."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# Simple configuration\nmaterial: 'oraxen:storm_sword'\n\n# Advanced configuration\nmaterial:\n  provider: oraxen\n  id: storm_sword\n"})}),"\n",(0,a.jsx)(n.h3,{id:"mmoitems",children:"MMOItems"}),"\n",(0,a.jsx)(n.p,{children:"Get item from MMOItems plugin."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# Simple configuration\nmaterial: 'mmoitems:SWORD:lava_sword'\n\n# Advanced configuration\nmaterial:\n  provider: mmoitems\n  type: SWORD\n  id: lava_sword\n"})}),"\n",(0,a.jsx)(n.h3,{id:"itemsadder",children:"ItemsAdder"}),"\n",(0,a.jsx)(n.p,{children:"Get item from ItemsAdder plugin."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# Simple configuration\nmaterial: 'itemsadder:custom_item'\n\n# Advanced configuration\nmaterial:\n  provider: itemsadder\n  id: custom_item\n"})}),"\n",(0,a.jsx)(n.h2,{id:"append",children:"Append"}),"\n",(0,a.jsx)(n.p,{children:"Append some display information to item after building it, this is useful if you want an item from another plugin and also add some lines to item lore."}),"\n",(0,a.jsx)(n.h3,{id:"name",children:"Name"}),"\n",(0,a.jsx)(n.p,{children:"Append to item display name."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# Simple configuration\nappend:\n  name.before: '&eText before'\n  name.after: '&bText after'\n\n# Advanced configuration\nappend:\n  name:\n    before: '&eText before'\n    after: '&bText after'\n"})}),"\n",(0,a.jsx)(n.h3,{id:"lore",children:"Lore"}),"\n",(0,a.jsx)(n.p,{children:"Append to item display lore."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# Simple configuration\nappend:\n  lore.before:\n    - '&eLine before'\n  lore.after:\n    - '&bLine after'\n\n# Advanced configuration\nappend:\n  lore:\n    before:\n      - '&eLine before'\n    after:\n      - '&bLine after'\n"})}),"\n",(0,a.jsx)(n.h2,{id:"nbt",children:"NBT"}),"\n",(0,a.jsx)(n.p,{children:"It's the most advanced feature to edit item tags directly from internal data."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"nbt:\n  # Make item unbreakable on versions older than 1.11\n  Unbreakable: true\n  # Set item repair cost on anvils\n  RepairCost: 10\n  # And also add anything here\n  some:\n    custom:\n      tag: 'path'\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Data types:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"byte"})," - Write as ",(0,a.jsx)(n.code,{children:"<number>b"}),", for example ",(0,a.jsx)(n.code,{children:"tag: 30b"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"short"})," - Write as ",(0,a.jsx)(n.code,{children:"<number>s"}),", for example ",(0,a.jsx)(n.code,{children:"tag: 30s"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"int"})," - Write as ",(0,a.jsx)(n.code,{children:"<number>"}),", for example ",(0,a.jsx)(n.code,{children:"tag: 30"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"long"})," - Write as ",(0,a.jsx)(n.code,{children:"<number>L"}),", for example ",(0,a.jsx)(n.code,{children:"tag: 30L"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"float"})," - Write as ",(0,a.jsx)(n.code,{children:"<number>f"}),", for example ",(0,a.jsx)(n.code,{children:"tag: 30.0f"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"double"})," - Write as ",(0,a.jsx)(n.code,{children:"<number>d"}),", for example ",(0,a.jsx)(n.code,{children:"tag: 30.0d"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"byte[]"})," - Write as ",(0,a.jsx)(n.code,{children:"[B; <bytes...>B]"}),", for example ",(0,a.jsx)(n.code,{children:"tag: [B; 30B, 40B, 50B]"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"int[]"})," - Write as ",(0,a.jsx)(n.code,{children:"[I; <integers...>]"}),", for example ",(0,a.jsx)(n.code,{children:"tag: [I; 30, 40, 50]"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"long[]"})," - Write as ",(0,a.jsx)(n.code,{children:"[L; <longs...>l]"}),", for example ",(0,a.jsx)(n.code,{children:"tag: [L; 30L, 40L, 50L]"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"String"})," - Write as ",(0,a.jsx)(n.code,{children:"<text>"}),", for example ",(0,a.jsx)(n.code,{children:"tag: 'Hello'"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>l});var t=i(6540);const a={},r=t.createContext(a);function s(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);