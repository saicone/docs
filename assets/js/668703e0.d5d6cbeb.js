"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[423],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>b});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),m=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=m(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=m(a),d=r,b=c["".concat(s,".").concat(d)]||c[d]||p[d]||o;return a?n.createElement(b,l(l({ref:t},u),{},{components:a})):n.createElement(b,l({ref:t},u))}));function b(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:r,l[1]=i;for(var m=2;m<o;m++)l[m]=a[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(7294),r=a(6010);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:a,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,l),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>N});var n=a(7462),r=a(7294),o=a(6010),l=a(2466),i=a(6775),s=a(1980),m=a(7392),u=a(12);function c(e){return function(e){var t;return(null==(t=r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))?void 0:t.filter(Boolean))??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function p(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??c(a);return function(e){const t=(0,m.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function d(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function b(e){let{queryString:t=!1,groupId:a}=e;const n=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(n.location.search);t.set(o,e),n.replace({...n.location,search:t.toString()})}),[o,n])]}function f(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,o=p(e),[l,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[s,m]=b({queryString:a,groupId:n}),[c,f]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,o]=(0,u.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:n}),g=(()=>{const e=s??c;return d({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{g&&i(g)}),[g]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),m(e),f(e)}),[m,f,o]),tabValues:o}}var g=a(2389);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:t,block:a,selectedValue:i,selectValue:s,tabValues:m}=e;const u=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.o5)(),p=e=>{const t=e.currentTarget,a=u.indexOf(t),n=m[a].value;n!==i&&(c(t),s(n))},d=e=>{var t;let a=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=u.indexOf(e.currentTarget)+1;a=u[t]??u[0];break}case"ArrowLeft":{const t=u.indexOf(e.currentTarget)-1;a=u[t]??u[u.length-1];break}}null==(t=a)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},t)},m.map((e=>{let{value:t,label:a,attributes:l}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>u.push(e),onKeyDown:d,onClick:p},l,{className:(0,o.Z)("tabs__item",y.tabItem,null==l?void 0:l.className,{"tabs__item--active":i===t})}),a??t)})))}function T(e){let{lazy:t,children:a,selectedValue:n}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function k(e){const t=f(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",y.tabList)},r.createElement(v,(0,n.Z)({},e,t)),r.createElement(T,(0,n.Z)({},e,t)))}function N(e){const t=(0,g.Z)();return r.createElement(k,(0,n.Z)({key:String(t)},e))}},6245:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>b,frontMatter:()=>i,metadata:()=>m,toc:()=>c});var n=a(7462),r=(a(7294),a(3905)),o=a(4866),l=a(5162);const i={sidebar_position:4,title:"Tag Stream",description:"Convert NBT into different types of data and viceversa"},s=void 0,m={unversionedId:"rtag/feature/stream",id:"rtag/feature/stream",title:"Tag Stream",description:"Convert NBT into different types of data and viceversa",source:"@site/docs/rtag/feature/stream.md",sourceDirName:"rtag/feature",slug:"/rtag/feature/stream",permalink:"/rtag/feature/stream",draft:!1,editUrl:"https://github.com/saicone/rtag/blob/main/docs/default/feature/stream.md",tags:[],version:"current",lastUpdatedBy:"github-actions[bot]",lastUpdatedAt:1739466050,formattedLastUpdatedAt:"Feb 13, 2025",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Tag Stream",description:"Convert NBT into different types of data and viceversa"},sidebar:"rtag",previous:{title:"Functional Paths",permalink:"/rtag/feature/functions"},next:{title:"Textured Heads",permalink:"/rtag/feature/textured-heads"}},u={},c=[{value:"Information",id:"information",level:2},{value:"TagCompound Data",id:"tagcompound-data",level:2},{value:"ItemTagStream",id:"itemtagstream",level:2}],p={toc:c},d="wrapper";function b(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"information"},"Information"),(0,r.kt)("p",null,"Rtag has the option to save any NBTTagCompound into different ways:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"File"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Base64"},"Base64")),(0,r.kt)("li",{parentName:"ul"},"Bytes (",(0,r.kt)("inlineCode",{parentName:"li"},"byte[]"),")"),(0,r.kt)("li",{parentName:"ul"},"Maps (",(0,r.kt)("inlineCode",{parentName:"li"},"Map<String, Object>"),")"),(0,r.kt)("li",{parentName:"ul"},"String (SNBT format, also compatible with Json)"),(0,r.kt)("li",{parentName:"ul"},"Readable Map (Only for items)")),(0,r.kt)("p",null,"Including compatibility with serializable objects."),(0,r.kt)("admonition",{title:"Supported serialization formats",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Any byte array serialization (probably saved as Base64) is compatible if it's made by the following methods:"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},"Using ",(0,r.kt)("inlineCode",{parentName:"li"},"BukkitObjectInputStream")," to save objects as type object or ",(0,r.kt)("inlineCode",{parentName:"li"},"byte[]"),"."),(0,r.kt)("li",{parentName:"ol"},"Using ",(0,r.kt)("inlineCode",{parentName:"li"},"NBTCompressedStreamTools")," to save objects as ",(0,r.kt)("inlineCode",{parentName:"li"},"NBTTagCompound"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"NBTTagList")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"NBTTagByteArray")," inside bytes."),(0,r.kt)("li",{parentName:"ol"},"NBT objects saved with GZIP format."),(0,r.kt)("li",{parentName:"ol"},"NBT objects saved inside other NBT object (like nbt list or byte array)."))),(0,r.kt)("h2",{id:"tagcompound-data"},"TagCompound Data"),(0,r.kt)("p",null,'The TagCompound class includes the "DATA" interface, an easy way to convert any NBTTagCompound into File, Base64, Bytes, Map and String.'),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"file",label:"File",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// NBTTagCompound from anywhere\nObject compound = ...;\n\n// Convert into File\nFile file TStream.COMPOUND.toFile(compound, new File("file.nbt"));\n\n// Get from file\nObject tagCompound = TStream.COMPOUND.fromFile(file);\n'))),(0,r.kt)(l.Z,{value:"base64",label:"Base64",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// NBTTagCompound from anywhere\nObject compound = ...;\n\n// Convert into Base64\nString base64 = TStream.COMPOUND.toBase64(compound);\n\n// Get from Base64\nObject tagCompound = TStream.COMPOUND.fromBase64(base64)[0]; // Return array\n"))),(0,r.kt)(l.Z,{value:"bytes",label:"Bytes",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// NBTTagCompound from anywhere\nObject compound = ...;\n\n// Convert into bytes\nbyte[] bytes = TStream.COMPOUND.toBytes(compound);\n\n// Get from bytes\nObject tagCompound = TStream.COMPOUND.fromBytes(bytes);\n"))),(0,r.kt)(l.Z,{value:"map",label:"Map",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// NBTTagCompound from anywhere\nObject compound = ...;\n\n// Convert into map\nMap<String, Object> map = TStream.COMPOUND.toMap(compound);\n\n// Get from map\nObject tagCompound = TStream.COMPOUND.fromMap(map);\n"))),(0,r.kt)(l.Z,{value:"string",label:"String",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// NBTTagCompound from anywhere\nObject compound = ...;\n\n// Convert into snbt\nString snbt = TStream.COMPOUND.toString(compound);\n\n// Get from snbt\nObject tagCompound = TStream.COMPOUND.fromString(snbt);\n")))),(0,r.kt)("h2",{id:"itemtagstream"},"ItemTagStream"),(0,r.kt)("p",null,"Rtag includes an easy way to convert any ItemStack into File, Base64, Bytes, Map, String and Readable Map, useful to ",(0,r.kt)("strong",{parentName:"p"},"save items in a database"),"."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},'The "readable map" format convert item name and lore into colored strings, instead of ',(0,r.kt)("a",{parentName:"p",href:"../../feature/chat-component/"},"chat component")," format introduced for items nbt on Minecraft 1.13, useful to save items in files and make them editable by the user without understanding chat components.")),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"file",label:"File",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'ItemStack item = ...;\n\n// Convert into File\nFile file = ItemTagStream.INSTANCE.toFile(item, new File("file.nbt"));\n\n// Get from File\nItemStack sameItem = ItemTagStream.INSTANCE.fromFile(file);\n'))),(0,r.kt)(l.Z,{value:"base64",label:"Base64",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"ItemStack item = ...;\n\n// Convert into Base64\nString base64 = ItemTagStream.INSTANCE.toBase64(item);\n\n// Get from Base64\nItemStack sameItem = ItemTagStream.INSTANCE.fromBase64(base64)[0]; // Return array\n\n\nList<ItemStack> items = // List of items;\n\n// Convert into Base64\nString base64 = ItemTagStream.INSTANCE.toBase64(items);\n\n// Get from Base64\nList<ItemStack> sameItems = ItemTagStream.INSTANCE.listFromBase64(base64);\n"))),(0,r.kt)(l.Z,{value:"bytes",label:"Bytes",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"ItemStack item = ...;\n\n// Convert into bytes\nbyte[] bytes = ItemTagStream.INSTANCE.toBytes(item);\n\n// Get from bytes\nItemStack sameItem = ItemTagStream.INSTANCE.fromBytes(bytes);\n"))),(0,r.kt)(l.Z,{value:"map",label:"Map",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"ItemStack item = ...;\n\n// Convert into map\nMap<String, Object> map = ItemTagStream.INSTANCE.toMap(item);\n\n// Get from map\nItemStack sameItem = ItemTagStream.INSTANCE.fromMap(map);\n"))),(0,r.kt)(l.Z,{value:"string",label:"String",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"ItemStack item = ...;\n\n// Convert into snbt\nString snbt = ItemTagStream.INSTANCE.toString(item);\n\n// Get from snbt\nItemStack sameItem = ItemTagStream.INSTANCE.fromString(snbt);\n"))),(0,r.kt)(l.Z,{value:"readable",label:"Readable",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"ItemStack item = ...;\n\n// Convert into readable map\nMap<String, Object> map = ItemTagStream.INSTANCE.toReadableMap(item);\n\n// Get from readable map\nItemStack sameItem = ItemTagStream.INSTANCE.fromReadableMap(map);\n")))),(0,r.kt)("p",null,"Including ",(0,r.kt)("strong",{parentName:"p"},"cross-version support"),"! Save an item on any version and get on any version without compatibility problems. Materials, enchantments, potions... etc, all will be converted!"),(0,r.kt)("p",null,"It also detects items serialized by Bukkit or Paper that adds data version tag as ",(0,r.kt)("inlineCode",{parentName:"p"},"DataVersion")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"v")," to apply the conversion."),(0,r.kt)("admonition",{title:"Current limitations",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"The default ItemTagStream instance it's ",(0,r.kt)("strong",{parentName:"p"},"only compatible")," with Bukkit items, if your server uses Forge it is suggested to use your own instance of ItemTagStream with Forge compatibility.")))}b.isMDXComponent=!0}}]);