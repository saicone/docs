"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6578],{1470:(e,t,a)=>{a.d(t,{A:()=>k});var n=a(6540),r=a(4164),l=a(3104),i=a(6347),o=a(205),s=a(7485),u=a(1682),c=a(679);function d(e){return n.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:t,children:a}=e;return(0,n.useMemo)(()=>{const e=t??function(e){return d(e).map(({props:{value:e,label:t,attributes:a,default:n}})=>({value:e,label:t,attributes:a,default:n}))}(a);return function(e){const t=(0,u.XI)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,a])}function m({value:e,tabValues:t}){return t.some(t=>t.value===e)}function f({queryString:e=!1,groupId:t}){const a=(0,i.W6)(),r=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,s.aZ)(r),(0,n.useCallback)(e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})},[r,a])]}function p(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,l=h(e),[i,s]=(0,n.useState)(()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const a=t.find(e=>e.default)??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l})),[u,d]=f({queryString:a,groupId:r}),[p,g]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[a,r]=(0,c.Dv)(t);return[a,(0,n.useCallback)(e=>{t&&r.set(e)},[t,r])]}({groupId:r}),x=(()=>{const e=u??p;return m({value:e,tabValues:l})?e:null})();(0,o.A)(()=>{x&&s(x)},[x]);return{selectedValue:i,selectValue:(0,n.useCallback)(e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);s(e),d(e),g(e)},[d,g,l]),tabValues:l}}var g=a(2303);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=a(4848);function y({className:e,block:t,selectedValue:a,selectValue:n,tabValues:i}){const o=[],{blockElementScrollPositionUntilNextRender:s}=(0,l.a_)(),u=e=>{const t=e.currentTarget,r=o.indexOf(t),l=i[r].value;l!==a&&(s(t),n(l))},c=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const a=o.indexOf(e.currentTarget)+1;t=o[a]??o[0];break}case"ArrowLeft":{const a=o.indexOf(e.currentTarget)-1;t=o[a]??o[o.length-1];break}}t?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},e),children:i.map(({value:e,label:t,attributes:n})=>(0,b.jsx)("li",{role:"tab",tabIndex:a===e?0:-1,"aria-selected":a===e,ref:e=>{o.push(e)},onKeyDown:c,onClick:u,...n,className:(0,r.A)("tabs__item",x.tabItem,n?.className,{"tabs__item--active":a===e}),children:t??e},e))})}function j({lazy:e,children:t,selectedValue:a}){const l=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=l.find(e=>e.props.value===a);return e?(0,n.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:l.map((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==a}))})}function I(e){const t=p(e);return(0,b.jsxs)("div",{className:(0,r.A)("tabs-container",x.tabList),children:[(0,b.jsx)(y,{...t,...e}),(0,b.jsx)(j,{...t,...e})]})}function k(e){const t=(0,g.A)();return(0,b.jsx)(I,{...e,children:d(e.children)},String(t))}},4544:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>m,frontMatter:()=>s,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"rtag/feature/textured-heads","title":"Player Head/Profile","description":"How to get textured heads or profiles with Rtag","source":"@site/docs/rtag/feature/textured-heads.md","sourceDirName":"rtag/feature","slug":"/rtag/feature/textured-heads","permalink":"/rtag/feature/textured-heads","draft":false,"unlisted":false,"editUrl":"https://github.com/saicone/rtag/blob/main/docs/default/feature/textured-heads.md","tags":[],"version":"current","lastUpdatedBy":"github-actions[bot]","lastUpdatedAt":1750379083000,"sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"Player Head/Profile","description":"How to get textured heads or profiles with Rtag"},"sidebar":"rtag","previous":{"title":"Tag Stream","permalink":"/rtag/feature/stream"},"next":{"title":"Chat Component","permalink":"/rtag/feature/chat-component"}}');var r=a(4848),l=a(8453),i=a(1470),o=a(9365);const s={sidebar_position:5,title:"Player Head/Profile",description:"How to get textured heads or profiles with Rtag"},u=void 0,c={},d=[{value:"Head",id:"head",level:2},{value:"Profile",id:"profile",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["With the ",(0,r.jsx)(t.code,{children:"SkullTexture"})," class you can get textured heads from ",(0,r.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Base64",children:"base64"}),", url, texture ID, player name or UUID, and also get player profiles."]}),"\n",(0,r.jsx)(t.h2,{id:"head",children:"Head"}),"\n",(0,r.jsxs)(t.p,{children:["Get the following texture as ",(0,r.jsx)(t.code,{children:"ItemStack"})," head using all the different methods."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:"http://textures.minecraft.net/texture/fedfa2e0fdea0c0423804cdb5b62ad05a6e914c046c4a3b7e355bf81269125fd",alt:""})}),"\n","\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(o.A,{value:"base64",label:"Base64",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:'String texture = "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZmVkZmEyZTBmZGVhMGMwNDIzODA0Y2RiNWI2MmFkMDVhNmU5MTRjMDQ2YzRhM2I3ZTM1NWJmODEyNjkxMjVmZCJ9fQ==";\nItemStack head = SkullTexture.mojang().item(texture);\n\n</TabItem>\n<TabItem value="url" label="URL">\n\n```java\nString texture = "http://textures.minecraft.net/texture/fedfa2e0fdea0c0423804cdb5b62ad05a6e914c046c4a3b7e355bf81269125fd";\nItemStack head = SkullTexture.mojang().item(texture);\n'})})}),(0,r.jsx)(o.A,{value:"texture",label:"Texture ID",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:'String texture = "fedfa2e0fdea0c0423804cdb5b62ad05a6e914c046c4a3b7e355bf81269125fd";\nItemStack head = SkullTexture.mojang().item(texture);\n'})})}),(0,r.jsxs)(o.A,{value:"player",label:"Player",children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:'Player player = Bukkit.getPlayer("Rubenicos");\nItemStack head = SkullTexture.mojang().item(player);\n'})}),(0,r.jsx)(t.admonition,{title:"Player profiles are provided by the server",type:"warning",children:(0,r.jsx)(t.p,{children:"Obtaining a player head using the player itself may cause problems with offline-mode servers."})})]}),(0,r.jsx)(o.A,{value:"name",label:"Name",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:'String name = "Rubenicos";\n// Using Mojang API\nItemStack head = SkullTexture.mojang().item(name);\n// Using PlayerDB API\nItemStack head = SkullTexture.playerDB().item(name);\n// Using CraftHead API\nItemStack head = SkullTexture.craftHead().item(name);\n\n// --- Also get the item asynchronously, this is useful to avoid the server to get stuck\n// Using Mojang API\nCompletableFuture<ItemStack> head = SkullTexture.mojang().itemAsync(name);\n// Using PlayerDB API\nCompletableFuture<ItemStack> head = SkullTexture.playerDB().itemAsync(name);\n// Using CraftHead API\nCompletableFuture<ItemStack> head = SkullTexture.craftHead().itemAsync(name);\n\nhead.thenAccept(item -> {\n    // do something\n});\n'})})}),(0,r.jsx)(o.A,{value:"uuid",label:"UUID",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:'// --- Compatible with multiple types of UUID declaration\nUUID uniqueId = UUID.fromString("7ca003dc-175f-4f1f-b490-5651045311ad");\nString uniqueId = "7ca003dc-175f-4f1f-b490-5651045311ad";\nString uniqueId = "7ca003dc175f4f1fb4905651045311ad";\n\n// Using Mojang API\nItemStack head = SkullTexture.mojang().item(uniqueId);\n// Using PlayerDB API\nItemStack head = SkullTexture.playerDB().item(uniqueId);\n// Using CraftHead API\nItemStack head = SkullTexture.craftHead().item(uniqueId);\n\n// --- Also get the item asynchronously, this is useful to avoid the server to get stuck\n// Using Mojang API\nCompletableFuture<ItemStack> head = SkullTexture.mojang().itemAsync(uniqueId);\n// Using PlayerDB API\nCompletableFuture<ItemStack> head = SkullTexture.playerDB().itemAsync(uniqueId);\n// Using CraftHead API\nCompletableFuture<ItemStack> head = SkullTexture.craftHead().itemAsync(uniqueId);\n\nhead.thenAccept(item -> {\n    // do something\n});\n'})})})]}),"\n",(0,r.jsxs)(t.admonition,{title:"Server performance",type:"tip",children:[(0,r.jsx)(t.p,{children:"If you want to get some textured head using player name or UUID is suggested to use asynchronous methods since it will probably require internet connection."}),(0,r.jsxs)(t.p,{children:["And also provide a separated ",(0,r.jsx)(t.a,{href:"https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executor.html",children:"Executor"})," if you want to get an exaggerated\namount of textured heads using names and UUIDs, DO NOT use Bukkit scheduler due you will slow down others plugins performance."]})]}),"\n",(0,r.jsx)(t.h2,{id:"profile",children:"Profile"}),"\n",(0,r.jsxs)(t.p,{children:["Get a ",(0,r.jsx)(t.code,{children:"SkullTexture.Profile"})," (an encapsulation of GameProfile from Mojang code) using different types of profile providers."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:'// --- Compatible with multiple types of player declaration\n// Player object\nPlayer player = Bukkit.getPlayer("Rubenicos");\n// Player name\nString player = "Rubenicos";\n// Player id\nUUID player = UUID.fromString("7ca003dc-175f-4f1f-b490-5651045311ad");\nString player = "7ca003dc-175f-4f1f-b490-5651045311ad";\nString player = "7ca003dc175f4f1fb4905651045311ad";\n\n// Using Mojang API\nSkullTexture.Profile profile = SkullTexture.mojang().profileFrom(player);\n// Using PlayerDB API\nSkullTexture.Profile profile = SkullTexture.playerDB().profileFrom(player);\n// Using CraftHead API\nSkullTexture.Profile profile = SkullTexture.craftHead().profileFrom(player);\n'})}),"\n",(0,r.jsx)(t.admonition,{title:"Profile fetching",type:"warning",children:(0,r.jsx)(t.p,{children:"Getting profiles in most cases require internet connection with long waiting times, DO NOT fetch different profiles\ncontinuously on the main thread or using Bukkit scheduler (Make your own one in this case)."})}),"\n",(0,r.jsxs)(t.admonition,{title:"Cache rules",type:"info",children:[(0,r.jsx)(t.p,{children:"By default, profiles are cached with 3 hours expiration after last access to reduce network usage."}),(0,r.jsxs)(t.p,{children:["If you don't want to cache anything make your own implementation of ",(0,r.jsx)(t.code,{children:"SkullTexture"})," or create\na new ",(0,r.jsx)(t.code,{children:"SkullTexture.Mojang"}),", ",(0,r.jsx)(t.code,{children:"SkullTexture.PlayerDB"})," or ",(0,r.jsx)(t.code,{children:"SkullTexture.CraftHead"})," with ",(0,r.jsx)(t.code,{children:"null"})," cache."]})]})]})}function m(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>i,x:()=>o});var n=a(6540);const r={},l=n.createContext(r);function i(e){const t=n.useContext(l);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(l.Provider,{value:t},e.children)}},9365:(e,t,a)=>{a.d(t,{A:()=>i});a(6540);var n=a(4164);const r={tabItem:"tabItem_Ymn6"};var l=a(4848);function i({children:e,hidden:t,className:a}){return(0,l.jsx)("div",{role:"tabpanel",className:(0,n.A)(r.tabItem,a),hidden:t,children:e})}}}]);