"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2636],{6995:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"rtag/usage/item","title":"RtagItem","description":"Edit item NBT","source":"@site/docs/rtag/usage/item.md","sourceDirName":"rtag/usage","slug":"/rtag/usage/item","permalink":"/rtag/usage/item","draft":false,"unlisted":false,"editUrl":"https://github.com/saicone/rtag/blob/main/docs/default/usage/item.md","tags":[],"version":"current","lastUpdatedBy":"github-actions[bot]","lastUpdatedAt":1755643093000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"RtagItem","description":"Edit item NBT"},"sidebar":"rtag","previous":{"title":"RtagEditor","permalink":"/rtag/usage/editor"},"next":{"title":"RtagEntity","permalink":"/rtag/usage/entity"}}');var i=n(4848),s=n(8453);const o={sidebar_position:2,title:"RtagItem",description:"Edit item NBT"},d=void 0,r={},c=[{value:"Create",id:"create",level:2},{value:"Instance",id:"instance",level:3},{value:"Method",id:"method",level:3},{value:"Function",id:"function",level:3},{value:"Edit",id:"edit",level:2},{value:"Function",id:"function-1",level:3},{value:"Instance methods",id:"instance-methods",level:3},{value:"Components",id:"components",level:3},{value:"Load",id:"load",level:2},{value:"Get copy",id:"get-copy",level:3}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.admonition,{title:"Before continue",type:"info",children:[(0,i.jsxs)(t.p,{children:["To understand this page you should see ",(0,i.jsx)(t.a,{href:"/rtag/usage/editor",children:"RtagEditor guide"}),"."]}),(0,i.jsxs)(t.p,{children:["For better understand about some item tags it's suggested to visit the ",(0,i.jsx)(t.a,{href:"https://minecraft.wiki/w/Item_format",children:"Minecraft wiki page"}),"."]})]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"RtagItem"})," is an instance of ",(0,i.jsx)(t.code,{children:"RtagEditor"}),", so uses the same methods to edit, load and update changes as editor."]}),"\n",(0,i.jsx)(t.h2,{id:"create",children:"Create"}),"\n",(0,i.jsxs)(t.p,{children:["There are multiple ways to create a ",(0,i.jsx)(t.code,{children:"RtagItem"})," instance."]}),"\n",(0,i.jsx)(t.h3,{id:"instance",children:"Instance"}),"\n",(0,i.jsxs)(t.p,{children:["Using the simple constructor that accept any ",(0,i.jsx)(t.code,{children:"ItemStack"}),"."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"ItemStack item = ...;\n\nRtagItem tag = new RtagItem(item);\n"})}),"\n",(0,i.jsx)(t.p,{children:"Or specify the Rtag instance to handle NBT."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"ItemStack item = ...;\nRtag rtag = ...;\n\nRtagItem tag = new RtagItem(rtag, item);\n"})}),"\n",(0,i.jsx)(t.h3,{id:"method",children:"Method"}),"\n",(0,i.jsxs)(t.p,{children:["Using the simple method that accept any ",(0,i.jsx)(t.code,{children:"ItemStack"}),"."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"ItemStack item = ...;\n\nRtagItem tag = RtagItem.of(item);\n"})}),"\n",(0,i.jsx)(t.p,{children:"Or specify the Rtag instance to handle NBT."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"ItemStack item = ...;\nRtag rtag = ...;\n\nRtagItem tag = RtagItem.of(rtag, item);\n"})}),"\n",(0,i.jsx)(t.h3,{id:"function",children:"Function"}),"\n",(0,i.jsxs)(t.p,{children:["Using functions to edit NBT is the most easy way to handle ",(0,i.jsx)(t.code,{children:"RtagItem"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["You can edit the provided ",(0,i.jsx)(t.code,{children:"ItemStack"})," without replacing it."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'ItemStack item = ...;\n\n// Edit item\nRtagItem.edit(item, tag -> {\n\ttag.set(123, "path");\n});\n\n// Specify Rtag instance\nRtag rtag = ...;\nRtagItem.edit(rtag, item, tag -> {\n\ttag.set(123, "path");\n});\n'})}),"\n",(0,i.jsxs)(t.p,{children:["Take in count that method return the ",(0,i.jsx)(t.code,{children:"ItemStack"})," itself with changes loaded."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'ItemStack item = ...;\n\n// Edit item\nItemStack sameItem = RtagItem.edit(item, tag -> {\n\ttag.set(123, "path");\n});\n\n// Specify Rtag instance\nRtag rtag = ...;\nItemStack sameItem = RtagItem.edit(rtag, item, tag -> {\n\ttag.set(123, "path");\n});\n'})}),"\n",(0,i.jsx)(t.p,{children:"And you can return any type of object specified on the same function method."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'ItemStack item = ...;\n\n// Get an item copy with changes loaded\nItemStack itemWithChanges = RtagItem.edit(item, tag -> {\n\ttag.set(123, "path");\n\treturn tag.loadCopy();\n});\n\n// Return as you want from RtagEditor instance\nint number = RtagItem.edit(item, tag -> {\n\treturn tag.get("path");\n});\n'})}),"\n",(0,i.jsx)(t.h2,{id:"edit",children:"Edit"}),"\n",(0,i.jsxs)(t.p,{children:["There is some methods that ",(0,i.jsx)(t.code,{children:"RtagItem"})," contains and ",(0,i.jsx)(t.code,{children:"RtagEditor"})," don't."]}),"\n",(0,i.jsx)(t.h3,{id:"function-1",children:"Function"}),"\n",(0,i.jsxs)(t.p,{children:["As above functions the current ",(0,i.jsx)(t.code,{children:"RtagItem"})," can be edited with a function that return the instance itself."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'RtagItem tag = ...;\n\ntag.edit(tag -> {\n\ttag.set(123, "path");\n\ttag.set("Hello", "greeting");\n});\n'})}),"\n",(0,i.jsx)(t.h3,{id:"instance-methods",children:"Instance methods"}),"\n",(0,i.jsxs)(t.p,{children:["There are ",(0,i.jsx)(t.strong,{children:"easy to use"})," methods to edit ",(0,i.jsx)(t.strong,{children:"item known tags"})," in a simple way, having a wide Minecraft version support."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Enchantments"}),": RtagItem support any enchantment handling by ",(0,i.jsx)(t.code,{children:"Enchantment"})," enum, name ",(0,i.jsx)(t.code,{children:"String"})," or id ",(0,i.jsx)(t.code,{children:"Number"})," on any supported version."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'RtagItem tag = ...;\n\ntag.addEnchantment("Mending", 1);\n\nboolean bool = tag.hasEnchantment(70); // Return true because Mending ID is 70\n// Same as above but using enchantment name\nboolean bool = tag.hasEnchantment("Mending");\n\n// You can use Enchantment enum from Bukkit as well\ntag.removeEnchantment(Enchantment.MENDING);\n\ntag.addEnchantment("Mending", 1);\n\nint level = tag.getEnchantmentLevel("Mending");\n\n// Get all enchantments as Map\nMap<EnchantmentTag, Integer> enchants = tag.getEnchantments();\n'})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Unbreakable"}),": Handle item unbreakable state (added on MC 1.7, but it can be edited using ItemMeta by Bukkit until MC 1.11)."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"RtagItem tag = ...;\n\ntag.setUnbreakable(true);\n\nboolean bool = tag.isUnbreakable();\n"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"CustomModelData"}),": Edit custom model data introduced on 1.14 in any version."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"RtagItem tag = ...;\n\ntag.setCustomModelData(40);\n\nint model = tag.getCustomModelData();\n"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"RepairCost"}),": Edit item anvil repair cost."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"RtagItem tag = ...;\n\ntag.setRepairCost(10);\n\nint cost = tag.getRepairCost();\n"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Serialization"}),": Fix any bad serialized item on Bukkit 1.14 or higher."]}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:["On Minecraft 1.14, the item lore strings was moved to ",(0,i.jsx)(t.a,{href:"/rtag/feature/chat-component",children:"chat component"})," format, so Bukkit serialized items in some way cannot be compared with other items using ",(0,i.jsx)(t.code,{children:"ItemStack#isSimilar()"})," because the chat component of serialized item lore doesn't contains various unused tags."]})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"RtagItem tag = ...;\n\ntag.fixSerialization();\n"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Flags"}),": Better known as HideFlags, in RtagItem the flags are handled by ordinal values."]}),"\n",(0,i.jsx)(t.admonition,{title:"This is a deprecated feature, will be deleted on a future release.",type:"warning",children:(0,i.jsx)(t.p,{children:"On MC versions since 1.20.5 all the flag methods are converted into data components."})}),"\n",(0,i.jsxs)(t.ol,{start:"0",children:["\n",(0,i.jsx)(t.li,{children:"Enchantments"}),"\n",(0,i.jsx)(t.li,{children:"AttributeModifiers"}),"\n",(0,i.jsx)(t.li,{children:"Unbreakable"}),"\n",(0,i.jsx)(t.li,{children:"CanDestroy"}),"\n",(0,i.jsx)(t.li,{children:"CanPlaceOn"}),"\n",(0,i.jsx)(t.li,{children:"Other information (stored enchants, potion effects, generation, author, explosion and fireworks)"}),"\n",(0,i.jsx)(t.li,{children:"Dyed"}),"\n",(0,i.jsx)(t.li,{children:"Palette information (armor trim)"}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"RtagItem tag = ...;\n\ntag.addHideFlags(2, 4, 6);\n\nboolean bool = tag.hasHideFlags(2, 6); // return true\n\ntag.removeHideFlags(6);\n\ntag.setHideFlags(4);\n"})}),"\n",(0,i.jsx)(t.h3,{id:"components",children:"Components"}),"\n",(0,i.jsx)(t.admonition,{title:"This is an experimental feature",type:"warning",children:(0,i.jsx)(t.p,{children:"Any usage can be changed/removed on a future release, it's not suggested to use this unless you are shading the library in your project."})}),"\n",(0,i.jsx)(t.p,{children:"As of Minecraft 1.20.5, item format has changed to implement a better performance with vanilla tags using data components."}),"\n",(0,i.jsx)(t.p,{children:"With RtagItem you can edit components in a simple way as normal Java objects."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'RtagItem tag = ...;\n\nif (tag.hasComponent("minecraft:custom_model_data")) {\n    tag.removeComponent("minecraft:custom_model_data");\n} else {\n    tag.setComponent("minecraft:custom_model_data", 40);\n}\n\nfinal Object component = tag.getComponent("minecraft:custom_model_data");\nfinal Integer number = ComponentType.encodeJava("minecraft:custom_model_data", component).orElse(null);\n'})}),"\n",(0,i.jsx)(t.h2,{id:"load",children:"Load"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"RtagItem"})," changes can be loaded in additional ways, instead of ",(0,i.jsx)(t.code,{children:"RtagEditor"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"get-copy",children:"Get copy"}),"\n",(0,i.jsx)(t.p,{children:"Instead of load the changes into provided ItemStack, you can create a item copy with changes loaded."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'ItemStack original = ...;\n\n// Create editor\nRtagItem tag = new RtagItem(original);\n\n// Edit tag\ntag.set(123, "path");\n\n// Get a copy with changes loaded\nItemStan newItem = tag.loadCopy();\n'})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>d});var a=n(6540);const i={},s=a.createContext(i);function o(e){const t=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);