"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1690],{4319:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"ezlib/usage","title":"Usage","description":"How to use Ezlib","source":"@site/docs/ezlib/usage.md","sourceDirName":"ezlib","slug":"/ezlib/usage","permalink":"/ezlib/usage","draft":false,"unlisted":false,"editUrl":"https://github.com/saicone/ezlib/blob/main/docs/default/usage.md","tags":[],"version":"current","lastUpdatedBy":"github-actions[bot]","lastUpdatedAt":1750379083000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Usage","description":"How to use Ezlib"},"sidebar":"ezlib","previous":{"title":"Ezlib","permalink":"/ezlib/"}}');var a=o(4848),t=o(8453);const s={sidebar_position:2,title:"Usage",description:"How to use Ezlib"},l=void 0,r={},d=[{value:"Basic",id:"basic",level:2},{value:"Parent ClassLoader",id:"parent-classloader",level:2},{value:"Relocation",id:"relocation",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsx)(n.p,{children:"Ezlib uses a gradle-like dependency format to load them."})}),"\n",(0,a.jsx)(n.h2,{id:"basic",children:"Basic"}),"\n",(0,a.jsx)(n.p,{children:"Ezlib provides an easy method to load all needed dependencies at runtime into class loaders."}),"\n",(0,a.jsx)(n.p,{children:"Here is an example to load dependencies into a child class loader."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'// Create ezlib with default "libs" folder\nEzlib ezlib = new Ezlib();\n// Or specify a folder\nEzlib ezlib = new Ezlib(new File("folder/path"));\n\n// Initialize ezlib\nezlib.init();\n\n// Load from maven repository into child class loader\nezlib.dependency("commons-io:commons-io:2.11.0").load();\n\n// Load from specified repository\nezlib.dependency("com.saicone.rtag:rtag:1.3.0").repository("https://jitpack.io/").load();\n\n// You can change default repository\nezlib.setDefaultRepository("repo URL");\n'})}),"\n",(0,a.jsx)(n.h2,{id:"parent-classloader",children:"Parent ClassLoader"}),"\n",(0,a.jsx)(n.p,{children:"Ezlib allow you to append dependencies into parent class loader and specify repository before load method."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'Ezlib ezlib = new Ezlib();\n// Initialize ezlib\nezlib.init();\n\n// Load from maven repository into parent class loader\nezlib.dependency("commons-io:commons-io:2.11.0").parent(true).load();\n\n// Load from specified repository\nezlib.dependency("com.saicone.rtag:rtag:1.1.0")\n        .repository("https://jitpack.io/")\n        .parent(false)\n        .load();\n'})}),"\n",(0,a.jsx)(n.h2,{id:"relocation",children:"Relocation"}),"\n",(0,a.jsxs)(n.p,{children:["Ezlib uses ",(0,a.jsx)(n.a,{href:"https://github.com/lucko/jar-relocator",children:"jar-relocator"}),", so you can load dependencies with package relocation."]}),"\n",(0,a.jsx)(n.p,{children:"Here an example with Redis library and all the needed dependencies."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'Map<String, String> map = new HashMap();\nmap.put("com.google.gson", "myproject.path.libs.gson");\nmap.put("org.apache.commons.pool2", "myproject.path.libs.pool2");\nmap.put("org.json", "myproject.path.libs.json");\nmap.put("org.slf4j", "myproject.path.libs.slf4j");\nmap.put("redis.clients.jedis", "myproject.path.libs.jedis");\n\nEzlib ezlib = new Ezlib();\nezlib.init();\n\n// Load all the needed dependencies first\nezlib.dependency("com.google.gson:gson:2.8.9").relocations(map).parent(true).load();\nezlib.dependency("org.apache.commons:commons-pool2:2.11.1").relocations(map).parent(true).load();\nezlib.dependency("org.json:json:20211205").relocations(map).parent(true).load();\nezlib.dependency("org.slf4j:slf4j-api:1.7.32").relocations(map).parent(true).load();\n\n// Then load redis dependency\nezlib.dependency("redis.clients:jedis:4.2.2").relocations(map).parent(true).load();\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"warning",children:(0,a.jsx)(n.p,{children:"Make sure to relocate the imports during compile time, while excluding the class that you use to load the dependencies because the strings will be relocated too."})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>l});var i=o(6540);const a={},t=i.createContext(a);function s(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);