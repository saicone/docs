"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6917],{4330:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"settings/README","title":"Settings","description":"Librer\xeda de Java para interpretar m\xfaltiples formatos de datos como configuraciones flexibles.","source":"@site/i18n/es/docusaurus-plugin-content-docs/current/settings/README.md","sourceDirName":"settings","slug":"/settings/","permalink":"/es/settings/","draft":false,"unlisted":false,"editUrl":"https://github.com/saicone/settings/blob/main/docs/es/README.md","tags":[],"version":"current","lastUpdatedBy":"github-actions[bot]","lastUpdatedAt":1755644860000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Settings","description":"Librer\xeda de Java para interpretar m\xfaltiples formatos de datos como configuraciones flexibles."},"sidebar":"settings"}');var o=t(4848),i=t(8453);const r={sidebar_position:1,title:"Settings",description:"Librer\xeda de Java para interpretar m\xfaltiples formatos de datos como configuraciones flexibles."},a=void 0,l={},c=[{value:"Introducci\xf3n",id:"introducci\xf3n",level:2}];function d(e){const n={a:"a",h2:"h2",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"La librer\xeda Settings maneja diferentes formatos de datos como configuraci\xf3n en una forma flexible:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Plantillas y transformaciones de nodos."}),"\n",(0,o.jsx)(n.li,{children:"Sustituci\xf3n de valores de nodos en formatos no compatibles (como json y yaml)."}),"\n",(0,o.jsx)(n.li,{children:"Lector de formato opcional."}),"\n",(0,o.jsx)(n.li,{children:"Nodos iterables."}),"\n",(0,o.jsx)(n.li,{children:"Par\xe1metros para actualizar datos."}),"\n",(0,o.jsx)(n.li,{children:"Rutas comparables para obtener nodos."}),"\n",(0,o.jsx)(n.li,{children:"Valores de nodos en m\xfaltiples capas."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Actualmente soportando los formatos:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://github.com/lightbend/config/blob/main/HOCON.md",children:"HOCON"})}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://www.json.org/",children:"JSON"})," (usando ",(0,o.jsx)(n.a,{href:"https://github.com/google/gson",children:"Gson"}),")"]}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://toml.io/en/v1.0.0",children:"TOML"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"http://yaml.org/spec/1.1/current.html",children:"YAML"})}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Tomar en cuenta que esta librer\xeda no est\xe1 enfocada como un serializador de objetos, el objetivo principal es hacer una interacci\xf3n flexible con m\xfaltiples formatos de data al mismo tiempo."}),"\n",(0,o.jsx)(n.p,{children:"Tambi\xe9n tiene m\xe9todos simples para obtener nodos como m\xfaltiples tipos de datos si quieres implementar tu propio serializador de objetos."}),"\n",(0,o.jsx)(n.h2,{id:"introducci\xf3n",children:"Introducci\xf3n"})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var s=t(6540);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);