"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9397],{1830:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"rtag/advanced/tags","title":"Objetos de Tag","description":"Informaci\xf3n sobre Rtag manejando NBT","source":"@site/i18n/es/docusaurus-plugin-content-docs/current/rtag/advanced/tags.md","sourceDirName":"rtag/advanced","slug":"/rtag/advanced/tags","permalink":"/es/rtag/advanced/tags","draft":false,"unlisted":false,"editUrl":"https://github.com/saicone/rtag/blob/main/docs/es/advanced/tags.md","tags":[],"version":"current","lastUpdatedBy":"github-actions[bot]","lastUpdatedAt":1755643093000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Objetos de Tag","description":"Informaci\xf3n sobre Rtag manejando NBT"},"sidebar":"rtag","previous":{"title":"Explicaci\xf3n","permalink":"/es/rtag/advanced/explanation"},"next":{"title":"Objetos de Minecraft","permalink":"/es/rtag/advanced/minecraft"}}');var t=a(4848),s=a(8453);const r={sidebar_position:2,title:"Objetos de Tag",description:"Informaci\xf3n sobre Rtag manejando NBT"},i=void 0,c={},d=[{value:"TagBase",id:"tagbase",level:2},{value:"Crear",id:"crear",level:3},{value:"Obtener valores",id:"obtener-valores",level:3},{value:"TagList",id:"taglist",level:2},{value:"TagCompound",id:"tagcompound",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Aqu\xed algunas classes \xfatiles para manejar objetos NBT utilizando m\xe9todos simples."}),"\n",(0,t.jsx)(n.h2,{id:"tagbase",children:"TagBase"}),"\n",(0,t.jsx)(n.p,{children:"Es el class principal para manejar cualquier tipo de objeto NBT."}),"\n",(0,t.jsx)(n.h3,{id:"crear",children:"Crear"}),"\n",(0,t.jsxs)(n.p,{children:["Con el class ",(0,t.jsx)(n.code,{children:"TagBase"})," puede crear objetos NBT con cualquier tipo de objeto (normal de java), por defecto solo tiene soporte para los ",(0,t.jsx)(n.a,{href:"/es/rtag/intro#objetos-compatibles",children:"objetos compatibles"}),", ",(0,t.jsx)(n.code,{children:"Boolean"})," guardado como ",(0,t.jsx)(n.code,{children:"Byte"})," y ",(0,t.jsx)(n.code,{children:"UUID"})," guardado como ",(0,t.jsx)(n.code,{children:"String"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// Este m\xe9todo NO es compatible con Map o List\nObject nbtObject = TagBase.newTag("Hello");\n\n// Este m\xe9todo SI es compatible con Map, List y cualquier objeto deserializable utilizando Gson\nRtagMirror mirror = ...;\nObject nbtObject = TagBase.newTag(mirror, Map.of("greeting", "Hello"));\n\n// Copiar el objeto NBT\nObject nbtCopy = TagBase.clone(nbtObject);\n'})}),"\n",(0,t.jsx)(n.h3,{id:"obtener-valores",children:"Obtener valores"}),"\n",(0,t.jsxs)(n.p,{children:["El class ",(0,t.jsx)(n.code,{children:"TagBase"})," tiene diferentes m\xe9todos para obtener el equivalente en un objeto de Java desde cualquier objeto NBT, el ",(0,t.jsx)(n.code,{children:"Boolean"})," es obtenido como ",(0,t.jsx)(n.code,{children:"Byte"})," y el ",(0,t.jsx)(n.code,{children:"UUID"})," es obtenido como ",(0,t.jsx)(n.code,{children:"String"})," o ",(0,t.jsx)(n.code,{children:"int[]"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"// Objeto NBT\nObject nbtObject = ...;\n\n// Obtener el ID que representa el tipo de NBT\nbyte type = TagBase.getTypeId(nbtObject);\n\n// Obtener el equivalente en un objeto de Java\n// Este m\xe9todo NO es compatible con Map o List\nObject value = TagBase.getValue(nbtObject);\n\n// Obtener el equivalente en un objeto de Java\n// Este m\xe9todo SI es compatible con Map o List, pero\n// solo prove\xe9 conversi\xf3n con objetos serializables si\n// la instancia de RtagMirror lo permite\nRtagMirror mirror = ...;\nObject value = TagBase.getValue(mirror, nbtObject);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"taglist",children:"TagList"}),"\n",(0,t.jsxs)(n.p,{children:["Es un class m\xe1s espec\xedfico para manejar cualquier ",(0,t.jsx)(n.code,{children:"NBTTagList"})," como si fuera en java un ",(0,t.jsx)(n.code,{children:"List<NBTBase>"}),", tamb\xed\xe9n tiene los m\xe9todos mencionados anteriormente del class ",(0,t.jsx)(n.code,{children:"TagBase"}),", pero solo funcionan para las listas de NBT."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// Crear un NBTTagList\nObject nbtList = TagList.newTag();\n\n// Agregar un valor\nTagList.add(nbtList, TagBase.newTag("Hello"));\n\n// Obtener el tama\xf1o de la lista\nint size = TagList.size(nbtList);\n\n// Obtener un valor desde su posici\xf3n\nObject nbtObject = TagList.get(nbtList, 0); // posici\xf3n: 0\n\n// Obtener el valor dentro de la instancia de NBTTagList, una lista de NBTBase\nList<Object> value = TagList.getValue(nbtList);\n\n// Limpiar la lista\nTagList.clear(nbtList);\n'})}),"\n",(0,t.jsx)(n.h2,{id:"tagcompound",children:"TagCompound"}),"\n",(0,t.jsxs)(n.p,{children:["Es un class m\xe1s espec\xedfico para manejar cualquier ",(0,t.jsx)(n.code,{children:"NBTTagCompound"})," como si fuera en java un ",(0,t.jsx)(n.code,{children:"Map<String, NBTBase>"}),", tamb\xed\xe9n tiene los m\xe9todos mencionados anteriormente del class ",(0,t.jsx)(n.code,{children:"TagBase"}),", pero solo funcionan para los NBTTagCompound."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// Crear un NBTTagCompound\nObject nbtCompound = TagCompound.newTag();\n// O crear un NBTTagCompound utilizando un SNBT (tambi\xe9n es compatible con json)\nObject nbtCompound = TagCompound.newTag("{greeting:\\"Hello\\",someValue:123}");\n\n// Agregar un valor\nTagCompound.set(nbtCompound, "greeting", TagBase.newTag("Hello"));\n\n// Obtener el tama\xf1o del compound\nint size = TagCompound.getValue(nbtCompound).size();\n\n// Obtener un valor utilizando su key\nObject nbtObject = TagCompound.get(nbtCompound, "greeting");\n\n// Obtener el valor dentro de la instancia de NBTTagCompound, un Map de NBTBase\nMap<String, Object> value = TagCompound.getValue(nbtCompound);\n\n// Obtener el NBTTagCompound como si fuera un String en formato Json\nString json = TagCompound.getJson(nbtCompound);\n\n// Limpiar el compound\nTagCompound.clear(nbtCompound);\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>i});var o=a(6540);const t={},s=o.createContext(t);function r(e){const n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);