"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3028],{1470:(e,a,t)=>{t.d(a,{A:()=>v});var r=t(6540),n=t(4164),l=t(3104),o=t(6347),s=t(205),u=t(7485),d=t(1682),i=t(679);function c(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function m(e){const{values:a,children:t}=e;return(0,r.useMemo)(()=>{const e=a??function(e){return c(e).map(({props:{value:e,label:a,attributes:t,default:r}})=>({value:e,label:a,attributes:t,default:r}))}(t);return function(e){const a=(0,d.XI)(e,(e,a)=>e.value===a.value);if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[a,t])}function p({value:e,tabValues:a}){return a.some(a=>a.value===e)}function f({queryString:e=!1,groupId:a}){const t=(0,o.W6)(),n=function({queryString:e=!1,groupId:a}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:e,groupId:a});return[(0,u.aZ)(n),(0,r.useCallback)(e=>{if(!n)return;const a=new URLSearchParams(t.location.search);a.set(n,e),t.replace({...t.location,search:a.toString()})},[n,t])]}function h(e){const{defaultValue:a,queryString:t=!1,groupId:n}=e,l=m(e),[o,u]=(0,r.useState)(()=>function({defaultValue:e,tabValues:a}){if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${a.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=a.find(e=>e.default)??a[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:a,tabValues:l})),[d,c]=f({queryString:t,groupId:n}),[h,b]=function({groupId:e}){const a=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,n]=(0,i.Dv)(a);return[t,(0,r.useCallback)(e=>{a&&n.set(e)},[a,n])]}({groupId:n}),x=(()=>{const e=d??h;return p({value:e,tabValues:l})?e:null})();(0,s.A)(()=>{x&&u(x)},[x]);return{selectedValue:o,selectValue:(0,r.useCallback)(e=>{if(!p({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);u(e),c(e),b(e)},[c,b,l]),tabValues:l}}var b=t(2303);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=t(4848);function j({className:e,block:a,selectedValue:t,selectValue:r,tabValues:o}){const s=[],{blockElementScrollPositionUntilNextRender:u}=(0,l.a_)(),d=e=>{const a=e.currentTarget,n=s.indexOf(a),l=o[n].value;l!==t&&(u(a),r(l))},i=e=>{let a=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=s.indexOf(e.currentTarget)+1;a=s[t]??s[0];break}case"ArrowLeft":{const t=s.indexOf(e.currentTarget)-1;a=s[t]??s[s.length-1];break}}a?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.A)("tabs",{"tabs--block":a},e),children:o.map(({value:e,label:a,attributes:r})=>(0,g.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{s.push(e)},onKeyDown:i,onClick:d,...r,className:(0,n.A)("tabs__item",x.tabItem,r?.className,{"tabs__item--active":t===e}),children:a??e},e))})}function I({lazy:e,children:a,selectedValue:t}){const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(e){const e=l.find(e=>e.props.value===t);return e?(0,r.cloneElement)(e,{className:(0,n.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:l.map((e,a)=>(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==t}))})}function y(e){const a=h(e);return(0,g.jsxs)("div",{className:(0,n.A)("tabs-container",x.tabList),children:[(0,g.jsx)(j,{...a,...e}),(0,g.jsx)(I,{...a,...e})]})}function v(e){const a=(0,b.A)();return(0,g.jsx)(y,{...e,children:c(e.children)},String(a))}},8453:(e,a,t)=>{t.d(a,{R:()=>o,x:()=>s});var r=t(6540);const n={},l=r.createContext(n);function o(e){const a=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function s(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(l.Provider,{value:a},e.children)}},9038:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>i,contentTitle:()=>d,default:()=>p,frontMatter:()=>u,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"rtag/feature/textured-heads","title":"Cabeza/Perfil de Jugador","description":"Como obtener cabezas y perfiles con Rtag","source":"@site/i18n/es/docusaurus-plugin-content-docs/current/rtag/feature/textured-heads.md","sourceDirName":"rtag/feature","slug":"/rtag/feature/textured-heads","permalink":"/es/rtag/feature/textured-heads","draft":false,"unlisted":false,"editUrl":"https://github.com/saicone/rtag/blob/main/docs/es/feature/textured-heads.md","tags":[],"version":"current","lastUpdatedBy":"github-actions[bot]","lastUpdatedAt":1755643093000,"sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"Cabeza/Perfil de Jugador","description":"Como obtener cabezas y perfiles con Rtag"},"sidebar":"rtag","previous":{"title":"Tag Stream","permalink":"/es/rtag/feature/stream"},"next":{"title":"Componente de chat","permalink":"/es/rtag/feature/chat-component"}}');var n=t(4848),l=t(8453),o=t(1470),s=t(9365);const u={sidebar_position:5,title:"Cabeza/Perfil de Jugador",description:"Como obtener cabezas y perfiles con Rtag"},d=void 0,i={},c=[{value:"Cabeza",id:"cabeza",level:2},{value:"Perfil",id:"perfil",level:2}];function m(e){const a={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(a.p,{children:["Con el class ",(0,n.jsx)(a.code,{children:"SkullTexture"})," puedes obtener cabezas con textura desde el formato ",(0,n.jsx)(a.a,{href:"https://en.wikipedia.org/wiki/Base64",children:"base64"}),", url, ID de textura, nombre o UUID del jugador, y tambi\xe9n perfiles de jugador."]}),"\n",(0,n.jsx)(a.h2,{id:"cabeza",children:"Cabeza"}),"\n",(0,n.jsxs)(a.p,{children:["Obtener la siguiente textura como un ",(0,n.jsx)(a.code,{children:"ItemStack"})," de una cabeza usando todos los tipos de m\xe9todos."]}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.img,{src:"http://textures.minecraft.net/texture/fedfa2e0fdea0c0423804cdb5b62ad05a6e914c046c4a3b7e355bf81269125fd",alt:""})}),"\n","\n",(0,n.jsxs)(o.A,{children:[(0,n.jsx)(s.A,{value:"base64",label:"Base64",default:!0,children:(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-java",children:'String texture = "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZmVkZmEyZTBmZGVhMGMwNDIzODA0Y2RiNWI2MmFkMDVhNmU5MTRjMDQ2YzRhM2I3ZTM1NWJmODEyNjkxMjVmZCJ9fQ==";\nItemStack head = SkullTexture.getTexturedHead(texture);\n\n</TabItem>\n<TabItem value="url" label="URL">\n\n```java\nString texture = "http://textures.minecraft.net/texture/fedfa2e0fdea0c0423804cdb5b62ad05a6e914c046c4a3b7e355bf81269125fd";\nItemStack head = SkullTexture.getTexturedHead(texture);\n'})})}),(0,n.jsx)(s.A,{value:"texture",label:"ID de la textura",children:(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-java",children:'String texture = "fedfa2e0fdea0c0423804cdb5b62ad05a6e914c046c4a3b7e355bf81269125fd";\nItemStack head = SkullTexture.getTexturedHead(texture);\n'})})}),(0,n.jsxs)(s.A,{value:"player",label:"Jugador",children:[(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-java",children:'Player player = Bukkit.getPlayer("Rubenicos");\nItemStack head = SkullTexture.mojang().item(player);\n'})}),(0,n.jsx)(a.admonition,{title:"Los perfiles de jugador son dados por el servidor",type:"warning",children:(0,n.jsx)(a.p,{children:"Obtener la cabeza de un jugador usando el propio jugador puede causar problemas en los servidores no-premium."})})]}),(0,n.jsx)(s.A,{value:"name",label:"Nombre",children:(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-java",children:'String name = "Rubenicos";\n// Usando la API de Mojang\nItemStack head = SkullTexture.mojang().item(name);\n// Usando la API de PlayerDB\nItemStack head = SkullTexture.playerDB().item(name);\n// Usando la API de CraftHead\nItemStack head = SkullTexture.craftHead().item(name);\n\n// --- Obtener el item async, esto es bastante util para evitar lagear el servidor\n// Usando la API de Mojang\nCompletableFuture<ItemStack> head = SkullTexture.mojang().itemAsync(name);\n// Usando la API de PlayerDB\nCompletableFuture<ItemStack> head = SkullTexture.playerDB().itemAsync(name);\n// Usando la API de CraftHead\nCompletableFuture<ItemStack> head = SkullTexture.craftHead().itemAsync(name);\n\nhead.thenAccept(item -> {\n    // usar el item\n});\n'})})}),(0,n.jsx)(s.A,{value:"uuid",label:"UUID",children:(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-java",children:'// --- Compatible con todo tipo de formas de declarar el UUID de un jugador\nUUID uniqueId = UUID.fromString("7ca003dc-175f-4f1f-b490-5651045311ad");\nString uniqueId = "7ca003dc-175f-4f1f-b490-5651045311ad";\nString uniqueId = "7ca003dc175f4f1fb4905651045311ad";\n\n// Usando la API de Mojang\nItemStack head = SkullTexture.mojang().item(uniqueId);\n// Usando la API de PlayerDB\nItemStack head = SkullTexture.playerDB().item(uniqueId);\n// Usando la API de CraftHead\nItemStack head = SkullTexture.craftHead().item(uniqueId);\n\n// --- Obtener el item async, esto es bastante util para evitar lagear el servidor\n// Usando la API de Mojang\nCompletableFuture<ItemStack> head = SkullTexture.mojang().itemAsync(uniqueId);\n// Usando la API de PlayerDB\nCompletableFuture<ItemStack> head = SkullTexture.playerDB().itemAsync(uniqueId);\n// Usando la API de CraftHead\nCompletableFuture<ItemStack> head = SkullTexture.craftHead().itemAsync(uniqueId);\n\nhead.thenAccept(item -> {\n    // usar el item\n});\n'})})})]}),"\n",(0,n.jsxs)(a.admonition,{title:"Rendimiento del servidor",type:"tip",children:[(0,n.jsx)(a.p,{children:"Si quieres obtener la cabeza de un jugador usando el nombre o UUID del jugador, es recomendable usar los m\xe9todos async ya que probablemente se usar\xe1 internet para obtener la textura."}),(0,n.jsxs)(a.p,{children:["Adem\xe1s, crea un ",(0,n.jsx)(a.a,{href:"https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executor.html",children:"Executor"})," si lo que quieres es obtener una cantidad exagerada\nde cabezas con textura usando nombres y UUIDs, NO USES el scheduler de Bukkit porque podr\xedas lagear otros plugins."]})]}),"\n",(0,n.jsx)(a.h2,{id:"perfil",children:"Perfil"}),"\n",(0,n.jsxs)(a.p,{children:["Obtener un ",(0,n.jsx)(a.code,{children:"SkullTexture.Profile"})," (es una encapsulaci\xf3n del GameProfile de Mojang) usando diferentes objetos de los cuales se puede extraer un perfil."]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-java",children:'// --- Compatible con diferentes formas de declarar un jugador\n// El mismo jugador\nPlayer player = Bukkit.getPlayer("Rubenicos");\n// Nombre del jugador\nString player = "Rubenicos";\n// ID del jugador\nUUID player = UUID.fromString("7ca003dc-175f-4f1f-b490-5651045311ad");\nString player = "7ca003dc-175f-4f1f-b490-5651045311ad";\nString player = "7ca003dc175f4f1fb4905651045311ad";\n\n// Usando la API de Mojang\nSkullTexture.Profile profile = SkullTexture.mojang().profileFrom(player);\n// Usando la API de PlayerDB\nSkullTexture.Profile profile = SkullTexture.playerDB().profileFrom(player);\n// Usando la API de CraftHead\nSkullTexture.Profile profile = SkullTexture.craftHead().profileFrom(player);\n'})}),"\n",(0,n.jsx)(a.admonition,{title:"Obtener perfiles",type:"warning",children:(0,n.jsx)(a.p,{children:"La obtenci\xf3n de perfiles en la mayor\xeda de veces requiere conexi\xf3n a internet con largos tiempos de espera, NO USES estos\nm\xe9todos para obtener muchos perfiles diferentes de manera continua en el hilo principal del servidor o usando el scheduler de Bukkit\n(Es mejor que te hagas tu propio scheduler en este caso)."})}),"\n",(0,n.jsxs)(a.admonition,{title:"Reglas para el cach\xe9",type:"info",children:[(0,n.jsx)(a.p,{children:"Los valores de los perfiles son guardados en el cach\xe9 por 3 horas desde su \xfaltimo acceso para reduir el consumo de datos."}),(0,n.jsxs)(a.p,{children:["Si no quieres que nada se guarde en el cach\xe9 deber\xedas hacer tu propia implementaci\xf3n de ",(0,n.jsx)(a.code,{children:"SkullTexture"})," o crear un\n",(0,n.jsx)(a.code,{children:"SkullTexture.Mojang"}),", ",(0,n.jsx)(a.code,{children:"SkullTexture.PlayerDB"})," o ",(0,n.jsx)(a.code,{children:"SkullTexture.CraftHead"})," usando ",(0,n.jsx)(a.code,{children:"null"})," en el par\xe1metro del cach\xe9."]})]})]})}function p(e={}){const{wrapper:a}={...(0,l.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},9365:(e,a,t)=>{t.d(a,{A:()=>o});t(6540);var r=t(4164);const n={tabItem:"tabItem_Ymn6"};var l=t(4848);function o({children:e,hidden:a,className:t}){return(0,l.jsx)("div",{role:"tabpanel",className:(0,r.A)(n.tabItem,t),hidden:a,children:e})}}}]);