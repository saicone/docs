"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8619],{5215:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"rtag/usage/editor","title":"RtagEditor","description":"El objeto principal para editar NBT f\xe1cilmente","source":"@site/i18n/es/docusaurus-plugin-content-docs/current/rtag/usage/editor.md","sourceDirName":"rtag/usage","slug":"/rtag/usage/editor","permalink":"/es/rtag/usage/editor","draft":false,"unlisted":false,"editUrl":"https://github.com/saicone/rtag/blob/main/docs/es/usage/editor.md","tags":[],"version":"current","lastUpdatedBy":"Rub\xe9n","lastUpdatedAt":1750374604000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"RtagEditor","description":"El objeto principal para editar NBT f\xe1cilmente"},"sidebar":"rtag","previous":{"title":"Usar Rtag","permalink":"/es/rtag/usage/"},"next":{"title":"RtagItem","permalink":"/es/rtag/usage/item"}}');var i=n(4848),s=n(8453);const o={sidebar_position:1,title:"RtagEditor",description:"El objeto principal para editar NBT f\xe1cilmente"},r=void 0,d={},l=[{value:"Editar",id:"editar",level:2},{value:"M\xe9todos simples",id:"m\xe9todos-simples",level:3},{value:"Transformaci\xf3n",id:"transformaci\xf3n",level:3},{value:"Colecciones",id:"colecciones",level:3},{value:"Revisar",id:"revisar",level:3},{value:"Enums",id:"enums",level:3},{value:"Cargar",id:"cargar",level:2},{value:"Guardar ediciones",id:"guardar-ediciones",level:3},{value:"Actualizar",id:"actualizar",level:2},{value:"Obtener cambios",id:"obtener-cambios",level:3}];function c(e){const a={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(a.p,{children:["Las instancias de ",(0,i.jsx)(a.code,{children:"RtagEditor"})," (editor de tags) convierten un objeto de Bukkit en uno del servidor de Minecraft y proveen una forma de editar el tag (NBTTagCompound) dentro, usando una instancia de Rtag para manejar las operaciones con NBT."]}),"\n",(0,i.jsx)(a.h2,{id:"editar",children:"Editar"}),"\n",(0,i.jsxs)(a.p,{children:["Para entender el ",(0,i.jsx)(a.code,{children:"RtagEditor"})," primero es necesario que conozcas la forma de editar el tag actual."]}),"\n",(0,i.jsx)(a.h3,{id:"m\xe9todos-simples",children:"M\xe9todos simples"}),"\n",(0,i.jsx)(a.p,{children:"La instancia del editor simplifica cualquier edici\xf3n mediante una conversi\xf3n autom\xe1tica con el uso de una estructura de datos de arbol para obtener, establecer y remover objetos utilizando rutas."}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-java",children:'// Cualquier instancia de RtagEditor (RtagItem, RtagEntity, RtagBlock)\nRtagEditor tag = ...;\n\nString str = "My String";\n// Establecer en la ruta "my -> saved -> object"\ntag.set(str, "my", "saved", "object");\n\n// Obtener desde "my <- save <- object"\nString sameStr = tag.get("my", "saved", "object");\n\n// Eliminar desde la ruta\ntag.remove("my", "saved", "object");\n'})}),"\n",(0,i.jsxs)(a.p,{children:["Probablemente notaste que no existe un establecimiento u obtenci\xf3n expl\xedcita como ",(0,i.jsx)(a.code,{children:"setString"})," o ",(0,i.jsx)(a.code,{children:"getString"}),', eso es porque Rtag hace "magia" al convertir cualquier objeto NBT en un objeto normal de java.']}),"\n",(0,i.jsxs)(a.p,{children:["Tomar en cuenta que Rtag solo devuelve el objeto convertido, por s\xed mismo el no sabe si quieres un String, Integer, Float... etc, por lo que en operaci\xf3n normales de obtenci\xf3n ",(0,i.jsx)(a.strong,{children:"debes saber con seguridad que tipo objeto es el que est\xe1s obteniendo"})," o de lo contrario el objeto obtenido ser\xe1 null luego de fallar su conversi\xf3n o sencillamente no existe un objeto en la ruta especificada."]}),"\n",(0,i.jsxs)(a.p,{children:["Si no sabes cual tipo de objeto est\xe1s obteniendo, o la instancia de Rtag sencillamente no tiene una conversi\xf3n ya que los ",(0,i.jsx)(a.a,{href:"/es/rtag/intro#objetos-compatibles",children:"objetos compatibles"})," son limitados, puedes utilizar una obtenci\xf3n de ",(0,i.jsx)(a.a,{href:"/es/rtag/feature/types",children:"objeto opcional"})," la cual tiene una amplia variedad de conversiones para objetos adem\xe1s de revisiones para tus necesidades."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-java",children:'// Cualquier instancia de RtagEditor (RtagItem, RtagEntity, RtagBlock)\nRtagEditor tag = ...;\n\nString str = "123";\n// Establecer en la ruta "my -> saved -> object"\ntag.set(str, "my", "saved", "object");\n\n// Trata de obtener el objeto como String (cast) o devuelve "456" en caso de fallar\nString s = tag.getOptional("my", "saved", "object").or("456");\n\n// Lo mismo de arriba, pero el objeto opcional tratar\xe1 de convertir cualquier\n// tipo de objeto obtenido en un String\nString s = tag.getOptional("my", "saved", "object").asString("456");\n\n// Tambi\xe9n funciona para convertirlo en otros tipos de objetos\nint numValue = tag.getOptional("my", "saved", "object").asInt(-1); // -1 por defecto\n'})}),"\n",(0,i.jsx)(a.admonition,{type:"tip",children:(0,i.jsxs)(a.p,{children:["Revisa la ",(0,i.jsx)(a.strong,{children:(0,i.jsx)(a.a,{href:"/es/rtag/feature/custom-objects",children:"gu\xeda de objetos custom"})})," si quieres guardar cualquier clase de objeto serializable."]})}),"\n",(0,i.jsx)(a.h3,{id:"transformaci\xf3n",children:"Transformaci\xf3n"}),"\n",(0,i.jsx)(a.p,{children:"Usando m\xe9todos de transformaci\xf3n puedes unir y mover rutas f\xe1cilmente."}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-java",children:'// Cualquier instancia de RtagEditor (RtagItem, RtagEntity, RtagBlock)\nRtagEditor tag = ...;\n\n// Unir m\xfaltiples valores en el tag\ntag.merge(Map.of("asd", 123, "someKey", 41), true);\n\n// Mover desde una ruta hacia cualquier ruta\ntag.move(new Object[] {"asd"}, new Object[] {"my", "saved", "object"});\n'})}),"\n",(0,i.jsx)(a.h3,{id:"colecciones",children:"Colecciones"}),"\n",(0,i.jsxs)(a.p,{children:["Con Rtag es bastante f\xe1cil manejar listas de objetos, con el m\xe9todo ",(0,i.jsx)(a.code,{children:"add"})," puedes agregar objetos dentro de las listas en las rutas establecidas, adem\xe1s que si la lista no existe se encargar\xe1 de crear una nueva."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-java",children:'// Cualquier instancia de RtagEditor (RtagItem, RtagEntity, RtagBlock)\nRtagEditor tag = ...;\n\n// Crear una lista en la ruta "my -> saved -> list"\ntag.set(new ArrayList(), "my", "saved", "list");\n\nbyte num = 3;\n// A\xf1adirlo en la lista\ntag.add(num, "my", "saved", "list");\n\n// Obtener la lista\nList<Byte> list = tag.get("my", "saved", "list");\n\n// Si no sabes que tipo de lista es, puedes hacer una conversi\xf3n con un objeto opcional\nList<Byte> list = tag.getOptional("my", "saved", "list").asList(OptionalType::asByte);\n'})}),"\n",(0,i.jsx)(a.admonition,{type:"info",children:(0,i.jsxs)(a.p,{children:["Tomar en cuenta que las listas de NBT aceptan cualquier tipo de objeto al estar vac\xedas, esto es debido a la regla de que ",(0,i.jsx)(a.strong,{children:"el primer objeto define el tipo de NBT que tendr\xe1 la lista"}),"."]})}),"\n",(0,i.jsx)(a.h3,{id:"revisar",children:"Revisar"}),"\n",(0,i.jsxs)(a.p,{children:["Para revisar si cualquier tag existe o no dentro de la ruta establecida, puedes utilizar los m\xe9todos ",(0,i.jsx)(a.code,{children:"hasTag"})," o ",(0,i.jsx)(a.code,{children:"hasNotTag"}),"."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-java",children:'// Cualquier instancia de RtagEditor (RtagItem, RtagEntity, RtagBlock)\nRtagEditor tag = ...;\n\n// Revisar SI existe\nboolean exist = tag.hasTag("my", "saved", "object");\n// Revisar si NO existe\nboolean notExist = tag.notHasTag("my", "saved", "object");\n'})}),"\n",(0,i.jsx)(a.h3,{id:"enums",children:"Enums"}),"\n",(0,i.jsx)(a.admonition,{type:"info",children:(0,i.jsx)(a.p,{children:"Esta es una caracter\xedstica avanzada, puedes ignorar esta parte ya que es raramente utilizada."})}),"\n",(0,i.jsxs)(a.p,{children:["Las instancias de ",(0,i.jsx)(a.code,{children:"RtagEditor"}),' pueden manejar Enums como si fueran "bit fields", al tener una forma f\xe1cil de leer y guardar cualquier tipo de objeto con un valor ordinal establecido.']}),"\n",(0,i.jsxs)(a.p,{children:["Por ejemplo, si ",(0,i.jsx)(a.code,{children:"MyEnum"})," tiene los valores ",(0,i.jsx)(a.code,{children:"FIRE, GLOW, INVISIBLE"})," puedes tener un ",(0,i.jsx)(a.code,{children:"Set"})," de esos valores en el mismo lugar guardados como un Integer empezando con la definici\xf3n de que el valor ordinal de ",(0,i.jsx)(a.code,{children:"FIRE"})," es ",(0,i.jsx)(a.code,{children:"0"}),", el de ",(0,i.jsx)(a.code,{children:"GLOW"})," es ",(0,i.jsx)(a.code,{children:"1"})," y el de ",(0,i.jsx)(a.code,{children:"INVISIBLE"})," es ",(0,i.jsx)(a.code,{children:"2"}),"."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-java",children:'// Cualquier instancia de RtagEditor (RtagItem, RtagEntity, RtagBlock)\nRtagEditor tag = ...;\n\n// Agregar los valores en un Set del enum en la ruta "my -> saved -> enum"\ntag.addEnum(MyEnum.FIRE, "my", "saved", "enum");\ntag.addEnum(MyEnum.INVISIBLE, "my", "saved", "enum");\n\n// Obtener el Set del enum\nSet<MyEnum> set = tag.getOptional("my", "saved", "enum").asEnumSet(MyEnum.class);\n'})}),"\n",(0,i.jsx)(a.h2,{id:"cargar",children:"Cargar"}),"\n",(0,i.jsx)(a.p,{children:"Luego de editar el tag es necesario cargar los cambios dentro del objeto del servidor de Minecraft y el objeto de Bukkit."}),"\n",(0,i.jsx)(a.h3,{id:"guardar-ediciones",children:"Guardar ediciones"}),"\n",(0,i.jsxs)(a.p,{children:["El m\xe9todo ",(0,i.jsx)(a.code,{children:"load"})," guarda los cambios (los carga dentro)."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-java",children:'// Cualquier instancia de RtagEditor (RtagItem, RtagEntity, RtagBlock)\nRtagEditor tag = ...;\n\nString str = "My String";\n// Establecer en la ruta "my -> saved -> object"\ntag.set(str, "my", "saved", "object");\n\n// Cargarlo en el objeto proporcionado\ntag.load();\n'})}),"\n",(0,i.jsx)(a.h2,{id:"actualizar",children:"Actualizar"}),"\n",(0,i.jsxs)(a.p,{children:["Si quieres editar el objeto proporcionado (dependiendo la instancia de RtagEditor), es necesario actualizar el tag actual para seguirlo editando en la misma instancia del ",(0,i.jsx)(a.code,{children:"RtagEditor"}),"."]}),"\n",(0,i.jsx)(a.h3,{id:"obtener-cambios",children:"Obtener cambios"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-java",children:"// Cualquier instancia de RtagEditor (RtagItem, RtagEntity, RtagBlock)\nRtagEditor tag = ...;\n\n// <El objeto proporcionado fue editado (item, entidad o bloque)>\n\n// Actualizar el tag que se est\xe1 editando en el RtagEditor\ntag.update();\n"})})]})}function u(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>o,x:()=>r});var t=n(6540);const i={},s=t.createContext(i);function o(e){const a=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function r(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:a},e.children)}}}]);