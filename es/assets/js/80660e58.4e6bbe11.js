"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7113],{554:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"rtag/feature/compatible","title":"APIs compatibles","description":"Lista de APIs que pueden ser utilizadas con Rtag","source":"@site/i18n/es/docusaurus-plugin-content-docs/current/rtag/feature/compatible.md","sourceDirName":"rtag/feature","slug":"/rtag/feature/compatible","permalink":"/es/rtag/feature/compatible","draft":false,"unlisted":false,"editUrl":"https://github.com/saicone/rtag/blob/main/docs/es/feature/compatible.md","tags":[],"version":"current","lastUpdatedBy":"Rub\xe9n","lastUpdatedAt":1750374604000,"sidebarPosition":7,"frontMatter":{"sidebar_position":7,"title":"APIs compatibles","description":"Lista de APIs que pueden ser utilizadas con Rtag"},"sidebar":"rtag","previous":{"title":"Componente de chat","permalink":"/es/rtag/feature/chat-component"},"next":{"title":"Gu\xedas","permalink":"/es/rtag/guides/"}}');var s=n(4848),i=n(8453);const o={sidebar_position:7,title:"APIs compatibles",description:"Lista de APIs que pueden ser utilizadas con Rtag"},l=void 0,r={},d=[{value:"PersistentDataContainer de Bukkit",id:"persistentdatacontainer-de-bukkit",level:2},{value:"Ejemplo",id:"ejemplo",level:3},{value:"Inyector de NBT del Item-NBT-API",id:"inyector-de-nbt-del-item-nbt-api",level:2},{value:"Ejemplo",id:"ejemplo-1",level:3}];function c(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"Existen algunas APIs compatibles las cuales Rtag puede interactuar con estas."}),"\n",(0,s.jsx)(t.h2,{id:"persistentdatacontainer-de-bukkit",children:"PersistentDataContainer de Bukkit"}),"\n",(0,s.jsxs)(t.p,{children:["La api de ",(0,s.jsx)(t.code,{children:"PersistentDataContainer"})," fue introducida en la versi\xf3n 1.14 de Bukkit para guardar tags custom en diferentes objetos como items, entidades y tile entity, haciendo la edici\xf3n de los tags de NBT m\xe1s f\xe1cil para muchos desarrolladores, b\xe1sicamente la misma utilidad que Rtag pero limitada a solo editar tags custom, solamente compatible con los ",(0,s.jsx)(t.a,{href:"/es/rtag/intro#objetos-compatibles",children:"objetos compatibles"})," y utilizando la instancia de un plugin, adem\xe1s de ser necesario el saber editar NBT para hacer algo funcional."]}),"\n",(0,s.jsxs)(t.p,{children:["Con Rtag es posible editar objetos del ",(0,s.jsx)(t.code,{children:"PersistentDataContainer"})," debido a que son guardados en rutas del tag:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Items y tile entities: ",(0,s.jsx)(t.code,{children:"PublicBukkitValues -> <plugin>:<key>"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["Entidades: ",(0,s.jsx)(t.code,{children:"BukkitValues -> <plugin>:<key>"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["Chunks: ",(0,s.jsx)(t.code,{children:"ChunkBukkitValues -> <plugin>:<key>"}),"."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"ejemplo",children:"Ejemplo"}),"\n",(0,s.jsxs)(t.p,{children:['Por ejemplo, si un plugin llamado "CoolPlugin" guarda el valor de un ',(0,s.jsx)(t.code,{children:"String"}),' en el key "asd" utilizando el API de ',(0,s.jsx)(t.code,{children:"PersistentDataContainer"}),", podr\xe1s editarlo usando el siguiente m\xe9todo."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'// Usando un item\nRtagItem tag = new RtagItem(item);\n// Usando un bloque\nRtagBlock tag = new RtagBlock(block);\n\n// Obtener\nString value = tag.get("PublicBukkitValues", "coolplugin:asd");\n// Establecer\nString str = "Hello";\ntag.get(str, "PublicBukkitValues", "coolplugin:asd");\n\n\n// Usando una entidad\nRtagEntity tag = new RtagEntity(entity);\n\n// Obtener\nString value = tag.get("BukkitValues", "coolplugin:asd");\n// Establecer\nString str = "Hello";\ntag.get(str, "BukkitValues", "coolplugin:asd");\n'})}),"\n",(0,s.jsx)(t.h2,{id:"inyector-de-nbt-del-item-nbt-api",children:"Inyector de NBT del Item-NBT-API"}),"\n",(0,s.jsxs)(t.p,{children:["La caracter\xedstica del inyector del Item-NBT-API permite guardar tags custom en las entidades y tile entity, lo mismo que ",(0,s.jsx)(t.code,{children:"PersistentDataContainer"})," pero compatible con versiones m\xe1s viejas que la 1.14 de Bukkit."]}),"\n",(0,s.jsxs)(t.p,{children:["Con Rtag es posible editar esos tags custom debido a que est\xe1n guardados en la ruta ",(0,s.jsx)(t.code,{children:"__extraData"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"ejemplo-1",children:"Ejemplo"}),"\n",(0,s.jsxs)(t.p,{children:["Las ediciones son las mismas, pero todas las rutas empiezan con ",(0,s.jsx)(t.code,{children:"__extraData"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'// Usando una entidad\nRtagEntity tag = new RtagEntity(entity);\n// Usando un bloque\nRtagBlock tag = new RtagBlock(block);\n\nString str = "My String";\n// Establecer en la ruta "my -> saved -> object"\ntag.set(str, "__extraData", "my", "saved", "object");\n\n// Obtener desde "my <- save <- object"\nString sameStr = tag.get("__extraData", "my", "saved", "object");\n\n// Obtener desde la ruta\ntag.remove("__extraData", "my", "saved", "object");\n'})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>l});var a=n(6540);const s={},i=a.createContext(s);function o(e){const t=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);