"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2920],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>g});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(a),m=o,g=u["".concat(s,".").concat(m)]||u[m]||p[m]||r;return a?n.createElement(g,i(i({ref:t},d),{},{components:a})):n.createElement(g,i({ref:t},d))}));function g(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294),o=a(6010);const r={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,o.Z)(r.tabItem,i),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>I});var n=a(7462),o=a(7294),r=a(6010),i=a(2466),l=a(6775),s=a(1980),c=a(7392),d=a(12);function u(e){return function(e){var t;return(null==(t=o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))?void 0:t.filter(Boolean))??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:o}}=e;return{value:t,label:a,attributes:n,default:o}}))}function p(e){const{values:t,children:a}=e;return(0,o.useMemo)((()=>{const e=t??u(a);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function m(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:a}=e;const n=(0,l.k6)(),r=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s._X)(r),(0,o.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(n.location.search);t.set(r,e),n.replace({...n.location,search:t.toString()})}),[r,n])]}function b(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,r=p(e),[i,l]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:r}))),[s,c]=g({queryString:a,groupId:n}),[u,b]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,r]=(0,d.Nk)(a);return[n,(0,o.useCallback)((e=>{a&&r.set(e)}),[a,r])]}({groupId:n}),f=(()=>{const e=s??u;return m({value:e,tabValues:r})?e:null})();(0,o.useLayoutEffect)((()=>{f&&l(f)}),[f]);return{selectedValue:i,selectValue:(0,o.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),b(e)}),[c,b,r]),tabValues:r}}var f=a(2389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:a,selectedValue:l,selectValue:s,tabValues:c}=e;const d=[],{blockElementScrollPositionUntilNextRender:u}=(0,i.o5)(),p=e=>{const t=e.currentTarget,a=d.indexOf(t),n=c[a].value;n!==l&&(u(t),s(n))},m=e=>{var t;let a=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=d.indexOf(e.currentTarget)+1;a=d[t]??d[0];break}case"ArrowLeft":{const t=d.indexOf(e.currentTarget)-1;a=d[t]??d[d.length-1];break}}null==(t=a)||t.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":a},t)},c.map((e=>{let{value:t,label:a,attributes:i}=e;return o.createElement("li",(0,n.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>d.push(e),onKeyDown:m,onClick:p},i,{className:(0,r.Z)("tabs__item",v.tabItem,null==i?void 0:i.className,{"tabs__item--active":l===t})}),a??t)})))}function h(e){let{lazy:t,children:a,selectedValue:n}=e;const r=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===n));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function k(e){const t=b(e);return o.createElement("div",{className:(0,r.Z)("tabs-container",v.tabList)},o.createElement(y,(0,n.Z)({},e,t)),o.createElement(h,(0,n.Z)({},e,t)))}function I(e){const t=(0,f.Z)();return o.createElement(k,(0,n.Z)({key:String(t)},e))}},1478:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>g,frontMatter:()=>l,metadata:()=>c,toc:()=>u});var n=a(7462),o=(a(7294),a(3905)),r=a(4866),i=a(5162);const l={sidebar_position:1,title:"Rtag",description:'La librer\xeda de "leer NBTTagCompound" en una forma f\xe1cil.'},s=void 0,c={unversionedId:"rtag/README",id:"rtag/README",title:"Rtag",description:'La librer\xeda de "leer NBTTagCompound" en una forma f\xe1cil.',source:"@site/i18n/es/docusaurus-plugin-content-docs/current/rtag/README.md",sourceDirName:"rtag",slug:"/rtag/",permalink:"/es/rtag/",draft:!1,editUrl:"https://github.com/saicone/rtag/blob/main/docs/es/README.md",tags:[],version:"current",lastUpdatedBy:"github-actions[bot]",lastUpdatedAt:1739466050,formattedLastUpdatedAt:"13 feb 2025",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Rtag",description:'La librer\xeda de "leer NBTTagCompound" en una forma f\xe1cil.'},sidebar:"rtag",next:{title:"Info B\xe1sica",permalink:"/es/rtag/intro"}},d={},u=[{value:"Sobre Rtag",id:"sobre-rtag",level:2},{value:"Obtener Rtag",id:"obtener-rtag",level:2},{value:"Requisitos",id:"requisitos",level:3},{value:"Dependencia",id:"dependencia",level:3},{value:"Dependencia implementada",id:"dependencia-implementada",level:3},{value:"Por qu\xe9 Rtag",id:"por-qu\xe9-rtag",level:2},{value:"Velocidad como llamadas directas",id:"velocidad-como-llamadas-directas",level:3},{value:"F\xe1cil de entender",id:"f\xe1cil-de-entender",level:3},{value:"Guardar objetos custom",id:"guardar-objetos-custom",level:3},{value:"Instancias del TagStream",id:"instancias-del-tagstream",level:3},{value:"Cabezas con textura",id:"cabezas-con-textura",level:3},{value:"Componentes de chat",id:"componentes-de-chat",level:3}],p={toc:u},m="wrapper";function g(e){let{components:t,...a}=e;return(0,o.kt)(m,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,'Bienvenid@ a la wiki de Rtag, aqu\xed encontrar\xe1s informaci\xf3n sobre como utilizar Rtag adem\xe1s de sus posibilidades dentro de la "customizaci\xf3n" de un servidor de Minecraft.'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'// Usando un item\nRtagItem tag = new RtagItem(item);\n// Usando una entidad\nRtagEntity tag = new RtagEntity(entity);\n// Usando un bloque\nRtagBlock tag = new RtagBlock(block);\n\n\n// --- Establecer valores\n// Establecer el valor "Custom Text" en la ruta "display.Name"\ntag.set("Texto custom", "display", "Name");\n// O establecer una integral en la ruta "someKey"\ntag.set(40, "someKey");\n// Incluyendo compatibilidad con cualquier tipo de objeto como MyObject\nMyObject myobject = new MyObject();\ntag.set(myobject, "any", "path");\n// Unir m\xfaltiples valores en el tag\ntag.merge(Map.of("asd", 123, "someKey", 41), true);\n\n// Tambi\xe9n puedes a\xf1adir listas\ntag.set(new ArrayList(), "list", "path");\n// Y a\xf1adir valores dentro de las listas\ntag.add((short) 3, "list", "path");\n// O reemplazar un valor de una lista existente\ntag.set((short) 5, "list", "path", 0); // posici\xf3n 0\n\n// --- Obtener valores\n// Valor desde la ruta "display" -> "Name"\nString name = tag.get("display", "Name");\n// Obtener un valor de manera segura desde la ruta "someKey", -1 por defecto\nint intValue = tag.getOptional("someKey").or(-1);\nint sameValue = tag.getOptional("someKey").asInt(-1); // Este m\xe9todo trata de convertir cualquier tipo a una integral\n// Obtenci\xf3n de valor expl\xedcita para objetos custom\nMyObject sameobject = tag.getOptional("any", "path").as(MyObject.class);\n\n// Obtener listas\nList<Short> list = tag.get("list", "path");\n// Obtener un valor desde su posici\xf3n en una lista\nshort listValue = tag.get("list", "path", 0); // posici\xf3n 0\n\n// Obtener todo el tag como un Map con objetos\nMap<String, Object> map = tag.get();\n\n// --- Cargar los cambios realizados en el objeto (item, entidad, bloque)\n// Cargar los cambios en el objeto original\ntag.load();\n// El RtagItem tiene la opci\xf3n de cargar una copia del item original pero con los cambios\nItemStack itemCopy = tag.loadCopy();\n\n// --- Actualizar el tag actual en caso de que el objeto haya sido editado\ntag.update();\n')),(0,o.kt)("h2",{id:"sobre-rtag"},"Sobre Rtag"),(0,o.kt)("p",null,"Rtag es una librer\xeda cuya idea fue planteada en 2020, pero su desarrollo empez\xf3 hasta 2022 debido a limitaciones comerciales con respecto al apego hacia sistemas viejos por parte de la mayor\xeda de desarrolladores."),(0,o.kt)("p",null,"Esta librer\xeda fue creada con el fin de resolver la necesidad de desarrollar un servidor de Minecraft con gran variedad de cosas y al mismo tiempo mantener muchos jugadores sin que el rendimiento se vea afectado, usando as\xed un sistema moderno y amigable para el usuario."),(0,o.kt)("p",null,"Sin la necesidad de conocer a fondo los NBT, con Rtag es posible manejarlos mediante m\xe9todos simples como get() y set()."),(0,o.kt)("h2",{id:"obtener-rtag"},"Obtener Rtag"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://img.shields.io/github/v/tag/saicone/rtag?label=version%20actual&style=for-the-badge",alt:"version"})),(0,o.kt)("h3",{id:"requisitos"},"Requisitos"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"M\xednimo ",(0,o.kt)("strong",{parentName:"li"},"Minecraft 1.8.8:")," Rtag ofrece soporte a versiones bastante viejas por razones comerciales, pero en un principio est\xe1 dise\xf1ado para usarse con mayor eficiencia en las \xfaltimas versiones de Minecraft."),(0,o.kt)("li",{parentName:"ul"},"M\xednimo ",(0,o.kt)("strong",{parentName:"li"},"Java 11"))),(0,o.kt)("h3",{id:"dependencia"},"Dependencia"),(0,o.kt)("p",null,"Para utilizar Rtag en tu proyecto se debe agregar como una dependencia y decirle a los usuarios de tu plugin/proyecto que descarguen Rtag como plugin desde su ",(0,o.kt)("a",{parentName:"p",href:"https://www.spigotmc.org/resources/rtag.100694/"},"p\xe1gina de Spigot"),"."),(0,o.kt)(r.Z,{groupId:"build-file",mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"groovy",label:"build.gradle",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-groovy"},"repositories {\n    maven { url 'https://jitpack.io' }\n}\n\ndependencies {\n    compileOnly 'com.saicone.rtag:rtag:VERSION'\n    // Otros m\xf3dulos\n    compileOnly 'com.saicone.rtag:rtag-block:VERSION'\n    compileOnly 'com.saicone.rtag:rtag-entity:VERSION'\n    compileOnly 'com.saicone.rtag:rtag-item:VERSION'\n}\n"))),(0,o.kt)(i.Z,{value:"kotlin",label:"build.gradle.kts",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'repositories {\n    maven("https://jitpack.io")\n}\n\ndependencies {\n    compileOnly("com.saicone.rtag:rtag:VERSION")\n    // Otros m\xf3dulos\n    compileOnly("com.saicone.rtag:rtag-block:VERSION")\n    compileOnly("com.saicone.rtag:rtag-entity:VERSION")\n    compileOnly("com.saicone.rtag:rtag-item:VERSION")\n}\n'))),(0,o.kt)(i.Z,{value:"maven",label:"pom.xml",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"<repositories>\n    <repository>\n        <id>Jitpack</id>\n        <url>https://jitpack.io</url>\n    </repository>\n</repositories>\n  \n<dependencies>\n    <dependency>\n        <groupId>com.saicone.rtag</groupId>\n        <artifactId>rtag</artifactId>\n        <version>VERSION</version>\n        <scope>provided</scope>\n    </dependency>\n    \x3c!-- Otros m\xf3dulos --\x3e\n    <dependency>\n        <groupId>com.saicone.rtag</groupId>\n        <artifactId>rtag-block</artifactId>\n        <version>VERSION</version>\n        <scope>provided</scope>\n    </dependency>\n    <dependency>\n        <groupId>com.saicone.rtag</groupId>\n        <artifactId>rtag-entity</artifactId>\n        <version>VERSION</version>\n        <scope>provided</scope>\n    </dependency>\n    <dependency>\n        <groupId>com.saicone.rtag</groupId>\n        <artifactId>rtag-item</artifactId>\n        <version>VERSION</version>\n        <scope>provided</scope>\n    </dependency>\n</dependencies>\n")))),(0,o.kt)("h3",{id:"dependencia-implementada"},"Dependencia implementada"),(0,o.kt)("p",null,"Rtag es completamente compatible para ser implementado dentro de tu proyecto, si lo usas de esta manera NO hace falta que los usuarios de tu plugin/proyecto descarguen el plugin."),(0,o.kt)(r.Z,{groupId:"build-file",mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"groovy",label:"build.gradle",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-groovy"},"plugins {\n    id 'com.github.johnrengelman.shadow' version '8.1.1'\n}\n\nrepositories {\n    maven { url 'https://jitpack.io' }\n}\n\ndependencies {\n    implementation  'com.saicone.rtag:rtag:VERSION'\n    // Otros m\xf3dulos\n    implementation 'com.saicone.rtag:rtag-block:VERSION'\n    implementation 'com.saicone.rtag:rtag-entity:VERSION'\n    implementation 'com.saicone.rtag:rtag-item:VERSION'\n}\n\njar.dependsOn (shadowJar)\n\nshadowJar {\n    // Mover al paquete de Rtag (NO IGNORES ESTO)\n    relocate 'com.saicone.rtag', project.group + '.libs.rtag'\n    // Excluir los classes que no utilices (opcional)\n    minimize()\n}\n"))),(0,o.kt)(i.Z,{value:"kotlin",label:"build.gradle.kts",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'plugins {\n    id("com.github.johnrengelman.shadow") version "8.1.1"\n}\n\nrepositories {\n    maven("https://jitpack.io")\n}\n\ndependencies {\n    implementation("com.saicone.rtag:rtag:VERSION")\n    // Otros m\xf3dulos\n    implementation("com.saicone.rtag:rtag-block:VERSION")\n    implementation("com.saicone.rtag:rtag-entity:VERSION")\n    implementation("com.saicone.rtag:rtag-item:VERSION")\n}\n\ntasks {\n    jar {\n        dependsOn(tasks.shadowJar)\n    }\n\n    shadowJar {\n        // Mover al paquete de Rtag (NO IGNORES ESTO)\n        relocate("com.saicone.rtag", "${project.group}.libs.rtag")\n        // Excluir los classes que no utilices (opcional)\n        minimize()\n    }\n}\n'))),(0,o.kt)(i.Z,{value:"maven",label:"pom.xml",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"<repositories>\n    <repository>\n        <id>Jitpack</id>\n        <url>https://jitpack.io</url>\n    </repository>\n</repositories>\n  \n<dependencies>\n    <dependency>\n        <groupId>com.saicone.rtag</groupId>\n        <artifactId>rtag</artifactId>\n        <version>VERSION</version>\n        <scope>compile</scope>\n    </dependency>\n    \x3c!-- Otros m\xf3dulos --\x3e\n    <dependency>\n        <groupId>com.saicone.rtag</groupId>\n        <artifactId>rtag-block</artifactId>\n        <version>VERSION</version>\n        <scope>compile</scope>\n    </dependency>\n    <dependency>\n        <groupId>com.saicone.rtag</groupId>\n        <artifactId>rtag-entity</artifactId>\n        <version>VERSION</version>\n        <scope>compile</scope>\n    </dependency>\n    <dependency>\n        <groupId>com.saicone.rtag</groupId>\n        <artifactId>rtag-item</artifactId>\n        <version>VERSION</version>\n        <scope>compile</scope>\n    </dependency>\n</dependencies>\n\n<build>\n    <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-shade-plugin</artifactId>\n        <version>3.3.0</version>\n        <configuration>\n            <relocations>\n                \x3c!-- Mover al paquete de Rtag (NO IGNORES ESTO) --\x3e\n                <relocation>\n                    <pattern>com.saicone.rtag</pattern>\n                    <shadedPattern>${project.groupId}.libs.rtag</shadedPattern>\n                </relocation>\n            </relocations>\n            \x3c!-- Excluir los classes que no utilices (opcional) --\x3e\n            <minimizeJar>true</minimizeJar>\n        </configuration>\n        <executions>\n            <execution>\n                <phase>package</phase>\n                <goals>\n                    <goal>shade</goal>\n                </goals>\n            </execution>\n        </executions>\n    </plugin>\n</build>\n")))),(0,o.kt)("h2",{id:"por-qu\xe9-rtag"},"Por qu\xe9 Rtag"),(0,o.kt)("p",null,"Existen otras librerias para editar NBT, \xbfPor qu\xe9 Rtag deber\xeda utilizarse sobre las dem\xe1s?"),(0,o.kt)("h3",{id:"velocidad-como-llamadas-directas"},"Velocidad como llamadas directas"),(0,o.kt)("p",null,"Rtag abusa del uso del ",(0,o.kt)("inlineCode",{parentName:"p"},"static final MethodHandle")," para convertir el uso de m\xe9todos reflejados como si fueran llamadas directas, as\xed que funciona para editar NBT en operaciones no-async sin producir un mal impacto en el rendimiento de servidores grandes."),(0,o.kt)("h3",{id:"f\xe1cil-de-entender"},"F\xe1cil de entender"),(0,o.kt)("p",null,"No necesitas ser un experto en NBT, solo con m\xe9todos simples puedes establecer y obtener objetos normales de Java usando rutas al estilo de una estructura de datos de \xe1rbol."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'Rtag rtag = new Rtag();\nrtag.set(compound, "Texto Normal", "Custom", "Tag", "Path");\nString string = rtag.get(compound, "Custom", "Tag", "Path");\n')),(0,o.kt)("p",null,"Las principales ",(0,o.kt)("a",{parentName:"p",href:"usage/editor/"},"instancias de RtagEditor")," tienen m\xe9todos para hacer la edici\xf3n de tags f\xe1cilmente."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'RtagItem tag = new RtagItem(item);\ntag.setUnbreakable(true);\ntag.setRepairCost(20);\nint level = tag.getEnchantmentLevel("unbreaking"); // enum de Enchantment, nombre o id\n\nRtagEntity tag = new RtagEntity(entity);\ntag.setAttributeBase("generic.attackDamage", 0.5);\n\nRtagBlock tag = new RtagBlock(block);\ntag.setCustomName("\xa7eNombre con color");\n')),(0,o.kt)("p",null,"Adem\xe1s puedes editar objetos usando funciones dentro de las instancias de RtagEditor y devolver cualquier tipo de objeto."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'ItemStack item = ...;\n// Editar objeto original\nRtagItem.edit(item, tag -> {\n    tag.set("Custom Text", "display", "name");\n    tag.set(30, "someKey");\n});\n// Devolver una copia del original\nItemStack copy = RtagItem.edit(item, tag -> {\n    tag.set(30, "someKey");\n    return tag.loadCopy();\n});\n')),(0,o.kt)("h3",{id:"guardar-objetos-custom"},"Guardar objetos custom"),(0,o.kt)("p",null,"Por defecto, Rtag utiliza la librer\xeda Gson dentro de Bukkit para (de)serializar los objetos custom, pero necesitas obtenerlos usando una conversi\xf3n expl\xedcita."),(0,o.kt)("p",null,"Adem\xe1s, puede registrar tus propios (de)serializadores dentro de la instancia de Rtag que utilices para llevar a cabo una ",(0,o.kt)("a",{parentName:"p",href:"feature/custom-objects/"},"conversi\xf3n autom\xe1tica"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'Rtag rtag = new Rtag();\nMyObject myObject = new MyObject();\n\nrtag.set(compound, myObject, "CustomTagPath");\nMyObject sameObject = rtag.getOptional(compound, "CustomTagPath").as(MyObject.class);\n')),(0,o.kt)("h3",{id:"instancias-del-tagstream"},"Instancias del TagStream"),(0,o.kt)("p",null,"Con la ",(0,o.kt)("a",{parentName:"p",href:"feature/stream/"},"instancia ItemTagStream")," puedes convertir cualquier item en los formatos Base64|Archivo|Bytes|Map|String y viceversa.\nIncuyendo ",(0,o.kt)("strong",{parentName:"p"},"compatibilidad entre versiones"),"! Puedes guardar cualquier item en cualquier versi\xf3n y obtenerlo en cualquier versi\xf3n sin problemas de compatibilidad. Materiales, encantamientos, pociones... etc, todo ser\xe1 convertido!"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"ItemTagStream tag = ItemTagStream.INSTANCE;\n\nString string = tag.toBase64(item);\nItemStack sameItem = tag.fromBase64(string)[0];\n")),(0,o.kt)("h3",{id:"cabezas-con-textura"},"Cabezas con textura"),(0,o.kt)("p",null,"Con el ",(0,o.kt)("a",{parentName:"p",href:"feature/textured-heads/"},"class SkullTexture")," puedes obtener cabezas con textura desde los formatos base64, url, id de la textura, nombre o uuid del"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'// Base64\nItemStack head = SkullTexture.getTexturedHead("eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZmVkZmEyZTBmZGVhMGMwNDIzODA0Y2RiNWI2MmFkMDVhNmU5MTRjMDQ2YzRhM2I3ZTM1NWJmODEyNjkxMjVmZCJ9fQ==");\n// URL\nItemStack head = SkullTexture.getTexturedHead("http://textures.minecraft.net/texture/fedfa2e0fdea0c0423804cdb5b62ad05a6e914c046c4a3b7e355bf81269125fd");\n// ID de la textura\nItemStack head = SkullTexture.getTexturedHead("fedfa2e0fdea0c0423804cdb5b62ad05a6e914c046c4a3b7e355bf81269125fd");\n// Nombre de jugador\nItemStack head = SkullTexture.getTexturedHead("Rubenicos");\n// UUID de jugador\nItemStack head = SkullTexture.getTexturedHead("7ca003dc-175f-4f1f-b490-5651045311ad");\n')),(0,o.kt)("h3",{id:"componentes-de-chat"},"Componentes de chat"),(0,o.kt)("p",null,"Con el ",(0,o.kt)("a",{parentName:"p",href:"feature/chat-component/"},"class ChatComponent")," puede convertir (json) strings en componentes de chat y viceversa"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'// Convertir en componente\nObject component = ChatComponent.fromJson("{\\"bold\\":true,\\"italic\\":false,\\"color\\":\\"dark_purple\\",\\"text\\":\\"Colored text!\\"}");\nObject sameComponent = ChatComponent.fromString("\xa75\xa7lColored text!");\n\n// Convertir en texto\nString json = ChatComponent.toJson(component);\nString string = ChatComponent.toString(component);\n\n// Compatibilidad entre texto normal y json\nString json = ChatComponent.toJson("\xa75\xa7lColored text!");\nString string = ChatComponent.toString("{\\"bold\\":true,\\"italic\\":false,\\"color\\":\\"dark_purple\\",\\"text\\":\\"Colored text!\\"}");\n')),(0,o.kt)("p",null,"Incluyendo compatibilidad con darle un formato mejorado (pretty format) al nbt, coloreando los tags como el comando ",(0,o.kt)("inlineCode",{parentName:"p"},"/data")," de Minecraft."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'Object nbt = ...;\n\n// Formato mejorado como un componente de chat\nObject component = ChatComponent.toPrettyComponent(nbt, null);\n// Como un componente json con 2 espacios como sangr\xeda\nString json = ChatComponent.toPrettyJson(nbt, "  ");\n// Como un texto con color\nString colored = ChatComponent.toPrettyString(nbt, null);\n\n// Utilizando otra paleta de color (Puedes usar tu propia paleta)\nString colored = ChatComponent.toPrettyString(nbt, null, ChatComponent.NBT_PALETTE_BUNGEE);\n')))}g.isMDXComponent=!0}}]);